#!/bin/csh -f
# get_goesaod_files - Get GOES-16 (East) full-disk AOD files from NOAA web site.
# https://www.ospo.noaa.gov/Products/atmosphere/aerosols.html
# Contact: hai.zhang@noaa.gov

set URL = ' ftp://ftp.star.nesdis.noaa.gov/pub/smcd/hzhang/GOES-16/NRT/fdisk/AOD'
set CURL = '/usr/bin/curl -k --silent --retry 0 -L --tcp-nodelay --max-time 300 -o -'

cd /data/GOESAOD

@ yyyymmdd = `date -u "+%Y%m%d"`

# Number of days to try to retrieve.

@ days = 7

while ( $days )
  @ days -= 1

  if ( ! -d data/$yyyymmdd ) then
    mkdir data/$yyyymmdd
  endif

  # Get list of files:

  set input_files = `$CURL $URL/$yyyymmdd/ | awk '{ print $NF }'`

  foreach input_file ( $input_files ) 
    set output_file = "data/$yyyymmdd/$input_file"

    if ( ! -f $output_file ) then
      $CURL $URL/$yyyymmdd/$input_file > $output_file

      if ( $status != 0 ) then
        ## \rm -f $output_file >& /dev/null
      else
        chmod 444 $output_file # Prevent subsequent overwrites.
        ls -l $output_file
      endif
    endif
  end

  # Compute previous date:
 
  @ yyyy = $yyyymmdd / 10000
  @ mm = $yyyymmdd / 100 % 100
  @ dd = $yyyymmdd % 100

  @ dd -= 1

  if ( $dd < 1 ) then
    @ mm -= 1

    if ( $mm < 1 ) then
      @ yyyy -= 1
      @ mm = 12
    endif

    @ dd = `echo $yyyy $mm | awk '{ yyyy = $1; mm = $2; n = split( "31 28 31 30 31 30 31 31 30 31 30 31", a, " " ); d = a[mm]; if ( mm == 2 ) { leap = ( ( yyyy % 4 == 0 ) && ( ( yyyy % 100 != 0 ) || ( yyyy % 400 == 0 ) ) ); d += leap } print d }'`

  endif

  @ yyyymmdd = $yyyy * 10000 + $mm * 100 + $dd
end


