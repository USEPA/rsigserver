#!/usr/bin/perl -wT

##############################################################################
# PURPOSE: pandora2server - Serve Pandora profile data,
#          https://data.pandonia-global-network.org
#          subsetted by date/time range, variable, and
#          longitude-latitude box, in ASCII, XDR, original, NetCDF-COARDS, and
#          NetCDF-IOAPI formats for use by other programs (e.g., via wget).
# NOTES:   Server is WCS-compliant:
#          https://www.opengeospatial.org/standards/wcs
#          https://datafed.net/xs/OpenGIS/wcs/1.0.0/
#          and modeled after a similar webserver application:
#          https://webapps.datafed.net/ogc_EPA.wsfl
#
#          Launches the C Shell script listfiles and the
#          C program PandoraSubset which streams the data back on STDOUT.
#
#          Example usage:
#
#          wget -q -T 0 -O - 'https://ofmpub.epa.gov/rsig/pandoraserver?\
#                    SERVICE=wcs&\
#                    VERSION=1.0.0&\
#                    REQUEST=GetCoverage&\
#                    COVERAGE=L2Tot_rnvs0p1_7.nitrogen_dioxide_total_vertical_column_amount&\
#                    TIME=2019-09-11T00:00:00Z/2019-09-11T23:59:59Z&\
#                    BBOX=-125,25,-65,50,0,4000&\
#                    FORMAT=ascii'
#
# HISTORY: 2023-03-08 plessel.todd@epa.gov 1-919-541-5500
# STATUS:  unreviewed tested
##############################################################################


use strict;
package main;
$| = 1; # Turn off output buffering so messages appear in correct order.
alarm( 3600 ); # Kill process after 1 hour. Legitimate usage could be an hour!
# Restrict PATH and ENV. (But before popen, ENV is cleared!)
delete @ENV{ 'PATH', 'IFS', 'CDPATH', 'ENV', 'BASH_ENV' };


############################## TUNABLE CONSTANTS #############################


my $debugging = 0; # 1 = print debug messages to STDERR logs/error_log.

# Server where this program is installed:

my $server_path = 'https://YOUR_WEBSERVER_HOST/cgi-bin';

# Internal EPA server where the data and subset program are installed:

my $directory  = '/data/Pandora'; # Contains yearly data files.
my $lister     = "$directory/listfiles";
my $bindir     = '/rsig/current/code/bin/Linux.x86_64';
my $subsetter  = "$bindir/PandoraSubset";
my $locations_subsetter = "$directory/PandoraSubsetSites";
my $xdrconvert = "$bindir/XDRConvert";
my $compressor = "$bindir/gzip -c -1";
my $temp_directory  = '/data/tmp';
my $temp_file_name = "$temp_directory/pandoraserver.$$";

# Output messages when REQUEST=GetMetadata.
# Print this message first:

my $metadata_content = '
NASA Pandora measured atmospheric data accessed using RSIG.
https://data.pandonia-global-network.org
RSIG: https://www.epa.gov/rsig
';

# If FORMAT=original then print this message second:

my $metadata_content_original = '
The list of original data files are shown below.

';

# Else FORMAT!=original then print this message second:

my $metadata_content_processed = '
Data processing was done using the RSIG programs PandoraSubset and XDRConvert.
PandoraSubset is used to subset (by variable, lon-lat box and time range)
and reorganize/reformat and filter the data.
XDRConvert is optionally used to regrid, aggregate and reformat the data
to other file formats.
The list of original data files and the RSIG command used to process them
are shown below.

';

# Query string parsing routine dispatch table:

my %parsers = (
  'service'          => \&parse_service_option,
  'version'          => \&parse_version_option,
  'request'          => \&parse_request_option,
  'coverage'         => \&parse_coverage_option,
  'time'             => \&parse_time_option,
  'bbox'             => \&parse_bbox_option,
  'format'           => \&parse_format_option,
  'compress'         => \&parse_compress_option,
  'regrid'           => \&parse_regrid_option,
  'regrid_aggregate' => \&parse_regrid_aggregate_option,
  'lambert'          => \&parse_lambert_option,
  'stereographic'    => \&parse_stereographic_option,
  'mercator'         => \&parse_mercator_option,
  'lonlat'           => \&parse_lonlat_option,
  'ellipsoid'        => \&parse_ellipsoid_option,
  'grid'             => \&parse_grid_option,
  'levels'           => \&parse_levels_option,
  'minimum_quality'  => \&parse_minimum_quality_option,
  'aggregate'        => \&parse_aggregate_option,
  'instrument'       => \&parse_instrument_option
);

# Webserver content types for each output format:

my %content_types = (
  'ascii'         => 'text/plain',
  'xdr'           => 'application/octet-stream',
  'netcdf-coards' => 'application/netcdf',
  'netcdf-ioapi'  => 'application/netcdf',
  'original'      => 'application/octet-stream'
);

# Full URL path to this program:

my @pathed_program_parts = split( /\//, $0 );
my $program_name = $pathed_program_parts[ @pathed_program_parts - 1 ];
my $program = "$server_path/$program_name";


my @metadata = (

  #'{
  #' name' => 'L2Tot_rnvs0p1_7.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'id',
    'units' => '-',
    'description' => 'Ground-based Pandora Spectrometer instrument globally unique integer id'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.nitrogen_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Nitrogen dioxide total vertical column amount'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.nitrogen_dioxide_total_vertical_column_amount_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of nitrogen dioxide total vertical column amount'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.direct_nitrogen_dioxide_air_mass_factor',
    'units' => '-',
    'description' => 'Direct nitrogen dioxide air mass factor'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.diffuse_correction_for_nitrogen_dioxide',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for nitrogen dioxide, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for nitrogen dioxide: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.sum_of_nitrogen_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Uncertainty too high, 2=Signal to noise ratio too low, 3=Air mass factor too large'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.sum_of_nitrogen_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.fitting_result_index',
    'units' => '-',
    'description' => 'Fitting result index: 0,1,2=no error or warning, 3,4=warning, >4=error'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Normalized rms of spectral fitting residuals weighted with measured uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.expected_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on measured uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.expected_normalized_rms_weighted_instrumental_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on instrumental uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.mean_nitrogen_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.l2_fit_data_quality_flag',
    'units' => '-',
    'description' => 'Level 2 Fit data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.sum_of_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Weighted rms of spectral fitting too large, 3=Wavelength shift too large'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.sum_of_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=Absolute value of estimated average residual stray light level too high, 6=Although attempted, no wavelength change could be retrieved, 7=Absolute value of retrieved wavelength shift too large, 8=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature, 999=no effective temperature given'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.wavelength_shift_from_spectral_fitting',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from spectral fitting, -9=no wavelength change fitting'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.number_of_dark_count_cycles',
    'units' => '-',
    'description' => 'Number of dark count cycles'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2Tot_rnvs0p1_7.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },

  #'{
  #' name' => 'L2Tot_rnvs1p1_7.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2Tot_rnvs1p1_7.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.nitrogen_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Nitrogen dioxide total vertical column amount, -9e99=retrieval not successful'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.nitrogen_dioxide_total_vertical_column_amount_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of nitrogen dioxide total vertical column amount based on measured uncertainty, -8=retrieval not successful, -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no uncertainty could be retrieved'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.direct_nitrogen_dioxide_air_mass_factor',
    'units' => '-',
    'description' => 'Direct nitrogen dioxide air mass factor'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.diffuse_correction_for_nitrogen_dioxide',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for nitrogen dioxide, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for nitrogen dioxide: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.sum_of_nitrogen_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Uncertainty too high, 2=Signal to noise ratio too low, 3=Air mass factor too large'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.sum_of_nitrogen_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.fitting_result_index',
    'units' => '-',
    'description' => 'Fitting result index: 0,1,2=no error or warning, 3,4=warning, >4=error'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Normalized rms of spectral fitting residuals weighted with measured uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.expected_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on measured uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.expected_normalized_rms_weighted_instrumental_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on instrumental uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.mean_nitrogen_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.l2_fit_data_quality_flag',
    'units' => '-',
    'description' => 'Level 2 Fit data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.sum_of_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Weighted rms of spectral fitting too large, 3=Wavelength shift too large'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.sum_of_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=Absolute value of estimated average residual stray light level too high, 6=Although attempted, no wavelength change could be retrieved, 7=Absolute value of retrieved wavelength shift too large, 8=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.wavelength_shift_from_spectral_fitting',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from spectral fitting, -9=no wavelength change fitting'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.number_of_dark_count_cycles',
    'units' => '-',
    'description' => 'Number of dark count cycles'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2Tot_rnvs1p1_7.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },

  #'{
  #' name' => 'L2Tot_rout0p1_7.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2Tot_rout0p1_7.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2Tot_rout0p1_7.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2Tot_rout0p1_7.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rout0p1_7.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rout0p1_7.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rout0p1_7.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Tot_rout0p1_7.ozone_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Ozone total vertical column amount, -9e99=retrieval not successful'
  },
  { 'name' => 'L2Tot_rout0p1_7.ozone_total_vertical_column_amount_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of ozone total vertical column amount based on measured uncertainty, -8=retrieval not successful, -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no uncertainty could be retrieved'
  },
  { 'name' => 'L2Tot_rout0p1_7.direct_ozone_air_mass_factor',
    'units' => '-',
    'description' => 'Direct ozone air mass factor'
  },
  { 'name' => 'L2Tot_rout0p1_7.diffuse_correction_for_ozone',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for ozone, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },
  { 'name' => 'L2Tot_rout0p1_7.ozone_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for ozone: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_ozone_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for ozone exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Uncertainty too high, 2=Signal to noise ratio too low, 3=Air mass factor too large'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_ozone_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for ozone exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rout0p1_7.sulfur_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Sulfur dioxide total vertical column amount, -9e99=retrieval not successful'
  },
  { 'name' => 'L2Tot_rout0p1_7.sulfur_dioxide_total_vertical_column_amount_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of sulfur dioxide total vertical column amount based on measured uncertainty, -8=retrieval not successful, -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no uncertainty could be retrieved'
  },
  { 'name' => 'L2Tot_rout0p1_7.direct_sulfur_dioxide_air_mass_factor',
    'units' => '-',
    'description' => 'Direct sulfur dioxide air mass factor'
  },
  { 'name' => 'L2Tot_rout0p1_7.diffuse_correction_for_sulfur_dioxide',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for sulfur dioxide, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },
  { 'name' => 'L2Tot_rout0p1_7.sulfur_dioxide_l2_quality_flag',
    'units' => '-',
    'description' => ' L2 data quality flag for sulfur dioxide: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_sulfur_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => ' Sum over 2^i using those i, for which the corresponding L2 data quality parameter for sulfur dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Uncertainty too high, 2=Signal to noise ratio too low, 3=Air mass factor too large'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_sulfur_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for sulfur dioxide exceeds the DQ2 limit (same parameters as for DQ1'
  },
  { 'name' => 'L2Tot_rout0p1_7.fitting_result_index',
    'units' => '-',
    'description' => 'Fitting result index: 0,1,2=no error or warning, 3,4=warning, >4=error'
  },
  { 'name' => 'L2Tot_rout0p1_7.normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Normalized rms of spectral fitting residuals weighted with measured uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rout0p1_7.expected_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on measured uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rout0p1_7.expected_normalized_rms_weighted_instrumental_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on instrumental uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2Tot_rout0p1_7.mean_sulfur_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2Tot_rout0p1_7.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2Tot_rout0p1_7.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2Tot_rout0p1_7.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2Tot_rout0p1_7.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2Tot_rout0p1_7.l2_fit_data_quality_flag',
    'units' => '-',
    'description' => 'Level 2 Fit data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Weighted rms of spectral fitting too large, 3=Wavelength shift too large'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rout0p1_7.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=Absolute value of estimated average residual stray light level too high, 6=Although attempted, no wavelength change could be retrieved, 7=Absolute value of retrieved wavelength shift too large, 8=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2Tot_rout0p1_7.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Tot_rout0p1_7.temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature'
  },
  { 'name' => 'L2Tot_rout0p1_7.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2Tot_rout0p1_7.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2Tot_rout0p1_7.wavelength_shift_from_spectral_fitting',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from spectral fitting, -9=no wavelength change fitting'
  },
  { 'name' => 'L2Tot_rout0p1_7.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2Tot_rout0p1_7.number_of_dark_count_cycles',
    'units' => '-',
    'description' => 'Number of dark count cycles'
  },
  { 'name' => 'L2Tot_rout0p1_7.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2Tot_rout0p1_7.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },

  #'{
  #' name' => 'L2_rfuh5p1_8.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2_rfuh5p1_8.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2_rfuh5p1_8.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2_rfuh5p1_8.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfuh5p1_8.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfuh5p1_8.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfuh5p1_8.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfuh5p1_8.pointing_zenith_angle',
    'units' => 'deg',
    'description' => 'Pointing zenith angle for measurement center'
  },
  { 'name' => 'L2_rfuh5p1_8.pointing_azimuth_angle',
    'units' => 'deg',
    'description' => 'Pointing azimuth trig angle for measurement center'
  },
  { 'name' => 'L2_rfuh5p1_8.rms_fitting_residuals',
    'units' => '-',
    'description' => 'rms of unweighted fitting residuals, -9=fitting not successful'
  },
  { 'name' => 'L2_rfuh5p1_8.normalized_rms_fitting_residuals',
    'units' => '-',
    'description' => 'Normalized rms of fitting residuals weighted with independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rfuh5p1_8.expected_rms_unweighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected rms of unweighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rfuh5p1_8.expected_rms_weighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rfuh5p1_8.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2_rfuh5p1_8.temperature',
    'units' => 'C',
    'description' => 'Climatological station temperature'
  },
  { 'name' => 'L2_rfuh5p1_8.o2_height',
    'units' => 'm',
    'description' => 'Climatological effective O2 height'
  },
  { 'name' => 'L2_rfuh5p1_8.o2o2_height',
    'units' => 'm',
    'description' => 'Climatological effective O2O2 height'
  },
  { 'name' => 'L2_rfuh5p1_8.surface_o2',
    'units' => 'mol/m3',
    'description' => 'Climatological surface O2 concentration'
  },
  { 'name' => 'L2_rfuh5p1_8.surface_o2o2',
    'units' => 'mol2/m6',
    'description' => 'Climatological surface O2O2 concentration'
  },
  { 'name' => 'L2_rfuh5p1_8.total_o2_column',
    'units' => 'molecules/cm2',
    'description' => 'Climatological total O2 column'
  },
  { 'name' => 'L2_rfuh5p1_8.total_o2o2_column',
    'units' => 'mol2/m5',
    'description' => 'Climatological total O2O2 colum'
  },
  { 'name' => 'L2_rfuh5p1_8.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2_rfuh5p1_8.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2_rfuh5p1_8.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2_rfuh5p1_8.mean_formaldehyde_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2_rfuh5p1_8.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature'
  },
  { 'name' => 'L2_rfuh5p1_8.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2_rfuh5p1_8.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2_rfuh5p1_8.total_wavelength_shift',
    'units' => 'nm',
    'description' => 'Retrieved total wavelength shift'
  },
  { 'name' => 'L2_rfuh5p1_8.resolution_change',
    'units' => '%',
    'description' => 'Retrieved resolution change'
  },
  { 'name' => 'L2_rfuh5p1_8.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2_rfuh5p1_8.number_of_bright_count_cycles',
    'units' => '-',
    'description' => 'Number of bright count cycles'
  },
  { 'name' => 'L2_rfuh5p1_8.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rfuh5p1_8.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rfuh5p1_8.atmospheric_variability',
    'units' => '%',
    'description' => 'Atmospheric variability, 999=no atmospheric variability was determined'
  },
  { 'name' => 'L2_rfuh5p1_8.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rfuh5p1_8.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=The dark count differs significantly from the dark map for too many pixels, 6=Absolute value of estimated average residual stray light level too high, 7=Although attempted, no wavelength change could be retrieved, 8=Absolute value of retrieved wavelength shift too large, 9=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2_rfuh5p1_8.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rfuh5p1_8.l2_fit_quality_flag',
    'units' => '-',
    'description' => 'L2 fit data quality flag, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rfuh5p1_8.sum_of_l2_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Wavelength shift too large, 3=Normalized rms of fitting residuals weighted with independent uncertainty too large'
  },
  { 'name' => 'L2_rfuh5p1_8.sum_of_l2_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rfuh5p1_8.formaldehyde_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for formaldehyde, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rfuh5p1_8.sum_of_formaldehyde_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for formaldehyde exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rfuh5p1_8.sum_of_formaldehyde_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for formaldehyde exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rfuh5p1_8.surface_formaldehyde',
    'units' => 'mol/m3',
    'description' => 'Formaldehyde surface concentration, -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rfuh5p1_8.surface_formaldehyde_uncertainty',
    'units' => 'mol/m3',
    'description' => 'Independent uncertainty of formaldehyde surface concentration, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rfuh5p1_8.surface_formaldehyde_index',
    'units' => '-',
    'description' => 'Formaldehyde surface concentration index, 1=Fully mixed case from extrapolation to horizon, 2=Fully mixed case from largest pointing zenith angle, 3=Heterogeneous case from extrapolation to horizon, 4=Heterogeneous case from largest pointing zenith angle, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rfuh5p1_8.formaldehyde_heterogeneity_flag',
    'units' => '-',
    'description' => 'Formaldehyde heterogeneity flag, 0=well mixed conditions, 1=heterogeneous conditions, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rfuh5p1_8.formaldehyde_tropospheric_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Formaldehyde tropospheric vertical column amount, -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rfuh5p1_8.formaldehyde_tropospheric_vertical_column_amount_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of formaldehyde tropospheric vertical column amount, -4=tropospheric column was estimated from direct sun measurements using effective temperature, -5=tropospheric column was estimated from direct sun measurements using stratospheric climatology, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rfuh5p1_8.maximum_horizontal_distance_formaldehyde_tropospheric_column',
    'units' => 'm',
    'description' => 'Maximum horizontal distance for formaldehyde tropospheric column'
  },
  { 'name' => 'L2_rfuh5p1_8.maximum_vertical_distance_formaldehyde_tropospheric_column',
    'units' => 'm',
    'description' => 'Maximum vertical distance for formaldehyde tropospheric column'
  },
  { 'name' => 'L2_rfuh5p1_8.formaldehyde_layer_top_height',
    'units' => 'm',
    'description' => 'Top height of formaldehyde layer 1'
  },
  { 'name' => 'L2_rfuh5p1_8.formaldehyde_layer_amount',
    'units' => 'molecules/cm2',
    'description' => 'Partial formaldehyde vertical column amount in layer 1'
  },

  #'{
  #' name' => 'L2_rfus5p1_8.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2_rfus5p1_8.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2_rfus5p1_8.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2_rfus5p1_8.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfus5p1_8.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfus5p1_8.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfus5p1_8.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rfus5p1_8.rms_fitting_residuals',
    'units' => '-',
    'description' => 'rms of unweighted fitting residuals, -9=fitting not successful'
  },
  { 'name' => 'L2_rfus5p1_8.normalized_rms_fitting_residuals',
    'units' => '-',
    'description' => 'Normalized rms of fitting residuals weighted with independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rfus5p1_8.expected_rms_unweighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected rms of unweighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rfus5p1_8.expected_normalized_rms_weighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rfus5p1_8.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2_rfus5p1_8.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2_rfus5p1_8.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2_rfus5p1_8.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2_rfus5p1_8.mean_formaldehyde_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2_rfus5p1_8.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature'
  },
  { 'name' => 'L2_rfus5p1_8.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2_rfus5p1_8.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2_rfus5p1_8.total_wavelength_shift',
    'units' => 'nm',
    'description' => 'Retrieved total wavelength shift, -9=no wavelength change fitting'
  },
  { 'name' => 'L2_rfus5p1_8.resolution_change',
    'units' => '%',
    'description' => 'Retrieved resolution change, -999=no resolution change fitting'
  },
  { 'name' => 'L2_rfus5p1_8.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2_rfus5p1_8.number_of_bright_count_cycles',
    'units' => '-',
    'description' => 'Number of bright count cycles'
  },
  { 'name' => 'L2_rfus5p1_8.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rfus5p1_8.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rfus5p1_8.atmospheric_variability',
    'units' => '%',
    'description' => 'Atmospheric variability, 999=no atmospheric variability was determined'
  },
  { 'name' => 'L2_rfus5p1_8.aerosol_optical_depth_start',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at starting wavelength of fitting window'
  },
  { 'name' => 'L2_rfus5p1_8.aerosol_optical_depth_center',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at center wavelength of fitting window'
  },
  { 'name' => 'L2_rfus5p1_8.aerosol_optical_depth_end',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at ending wavelength of fitting window'
  },
  { 'name' => 'L2_rfus5p1_8.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rfus5p1_8.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=The dark count differs significantly from the dark map for too many pixels, 6=Absolute value of estimated average residual stray light level too high, 7=Although attempted, no wavelength change could be retrieved, 8=Absolute value of retrieved wavelength shift too large, 9=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2_rfus5p1_8.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rfus5p1_8.l2_fit_quality_flag',
    'units' => '-',
    'description' => 'L2Fit data quality flag, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rfus5p1_8.sum_of_l2_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Wavelength shift too large, 3=Normalized rms of fitting residuals weighted with independent uncertainty too large'
  },
  { 'name' => 'L2_rfus5p1_8.sum_of_l2_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rfus5p1_8.fomaldehyde_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for formaldehyde, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rfus5p1_8.sum_of_formaldehyde_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for formaldehyde exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rfus5p1_8.sum_of_formaldehyde_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for formaldehyde exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rfus5p1_8.formaldehyde_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Formaldehyde total vertical column amount, -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rfus5p1_8.formaldehyde_vertical_column_amount_independent_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of formaldehyde total vertical column amount, -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.formaldehyde_vertical_column_amount_structured_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Structured uncertainty of formaldehyde total vertical column amount, -1=cross section is zero in this wavelength range, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.formaldehyde_vertical_column_amount_common_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Common uncertainty of formaldehyde total vertical column amount , -1=cross section is zero in this wavelength range, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.formaldehyde_vertical_column_amount_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Total uncertainty of formaldehyde total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -8=not given, since not all components are given'
  },
  { 'name' => 'L2_rfus5p1_8.formaldehyde_vertical_column_amount_rms_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'rms-based uncertainty of formaldehyde total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.temperature',
    'units' => 'C',
    'description' => 'Formaldehyde effective temperature'
  },
  { 'name' => 'L2_rfus5p1_8.temperature_independent_uncertainty',
    'units' => 'C',
    'description' => 'Independent uncertainty of formaldehyde effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.temperature_structured_uncertainty',
    'units' => 'C',
    'description' => 'Structured uncertainty of formaldehyde effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.temperature_common_uncertainty',
    'units' => 'C',
    'description' => 'Common uncertainty of formaldehyde effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.temperature_uncertainty',
    'units' => 'C',
    'description' => 'Total uncertainty of formaldehyde effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty or common uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rfus5p1_8.direct_formaldehyde_air_mass_factor',
    'units' => '-',
    'description' => 'Direct formaldehyde air mass factor'
  },
  { 'name' => 'L2_rfus5p1_8.direct_formaldehyde_air_mass_factor_uncertainty',
    'units' => '-',
    'description' => 'Uncertainty of direct formaldehyde air mass factor, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rfus5p1_8.diffuse_correction_for_formaldehyde',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for formaldehyde, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },

  #'{
  #' name' => 'L2_rnvh3p1_8.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2_rnvh3p1_8.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2_rnvh3p1_8.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2_rnvh3p1_8.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvh3p1_8.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvh3p1_8.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvh3p1_8.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvh3p1_8.pointing_zenith_angle',
    'units' => 'deg',
    'description' => 'Pointing zenith angle for measurement center'
  },
  { 'name' => 'L2_rnvh3p1_8.pointing_azimuth_angle',
    'units' => 'deg',
    'description' => 'Pointing azimuth trig angle for measurement center'
  },
  { 'name' => 'L2_rnvh3p1_8.rms_fitting_residuals',
    'units' => '-',
    'description' => 'rms of unweighted fitting residuals, -9=fitting not successful'
  },
  { 'name' => 'L2_rnvh3p1_8.normalized_rms_fitting_residuals',
    'units' => '-',
    'description' => 'Normalized rms of fitting residuals weighted with independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvh3p1_8.expected_rms_unweighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected rms of unweighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvh3p1_8.expected_normalized_rms_weighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvh3p1_8.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2_rnvh3p1_8.temperature',
    'units' => 'C',
    'description' => 'Climatological station temperature'
  },
  { 'name' => 'L2_rnvh3p1_8.o2_height',
    'units' => 'm',
    'description' => 'Climatological effective O2 height'
  },
  { 'name' => 'L2_rnvh3p1_8.o2o2_height',
    'units' => 'm',
    'description' => 'Climatological effective O2O2 height'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_o2',
    'units' => 'mol/m3',
    'description' => 'Climatological surface O2 concentration'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_o2o2',
    'units' => 'mol2/m6',
    'description' => 'Climatological surface O2O2 concentration'
  },
  { 'name' => 'L2_rnvh3p1_8.total_o2_column',
    'units' => 'molecules/cm2',
    'description' => 'Climatological total O2 column'
  },
  { 'name' => 'L2_rnvh3p1_8.total_o2o2_column',
    'units' => 'mol2/m5',
    'description' => 'Climatological total O2O2 column'
  },
  { 'name' => 'L2_rnvh3p1_8.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2_rnvh3p1_8.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2_rnvh3p1_8.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2_rnvh3p1_8.mean_formaldehyde_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2_rnvh3p1_8.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature'
  },
  { 'name' => 'L2_rnvh3p1_8.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2_rnvh3p1_8.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2_rnvh3p1_8.total_wavelength_shift',
    'units' => 'nm',
    'description' => 'Retrieved total wavelength shift, -9=no wavelength change fitting'
  },
  { 'name' => 'L2_rnvh3p1_8.resolution_change',
    'units' => '%',
    'description' => 'Retrieved resolution change, -999=no resolution change fitting'
  },
  { 'name' => 'L2_rnvh3p1_8.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2_rnvh3p1_8.number_of_bright_count_cycles',
    'units' => '-',
    'description' => 'Number of bright count cycles'
  },
  { 'name' => 'L2_rnvh3p1_8.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rnvh3p1_8.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rnvh3p1_8.atmospheric_variability',
    'units' => '%',
    'description' => 'Atmospheric variability, 999=no atmospheric variability was determined'
  },
  { 'name' => 'L2_rnvh3p1_8.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=The dark count differs significantly from the dark map for too many pixels, 6=Absolute value of estimated average residual stray light level too high, 7=Although attempted, no wavelength change could be retrieved, 8=Absolute value of retrieved wavelength shift too large, 9=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvh3p1_8.l2_fit_quality_flag',
    'units' => '-',
    'description' => 'L2Fit data quality flag, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_l2_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Wavelength shift too large, 3=Normalized rms of fitting residuals weighted with independent uncertainty too large'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_l2_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvh3p1_8.water_vapor_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for water vapor, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_water_vapor_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for water vapor exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_water_vapor_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for water vapor exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_water_vapor',
    'units' => 'mol/m3',
    'description' => 'Water vapor surface concentration, -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_water_vapor_uncertainty',
    'units' => 'mol/m3',
    'description' => 'Independent uncertainty of water vapor surface concentration, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_water_vapor_index',
    'units' => '-',
    'description' => 'Water vapor surface concentration index, 1=Fully mixed case from extrapolation to horizon, 2=Fully mixed case from largest pointing zenith angle, 3=Heterogeneous case from extrapolation to horizon, 4=Heterogeneous case from largest pointing zenith angle, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rnvh3p1_8.water_vapor_heterogeneity_flag',
    'units' => '-',
    'description' => 'Water vapor heterogeneity flag, 0=well mixed conditions, 1=heterogeneous conditions, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rnvh3p1_8.water_vapor_tropospheric_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Water vapor tropospheric vertical column amount , -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rnvh3p1_8.water_vapor_tropospheric_vertical_column_amount_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of water vapor tropospheric vertical column amount , -4=tropospheric column was estimated from direct sun measurements using effective temperature, -5=tropospheric column was estimated from direct sun measurements using stratospheric climatology, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rnvh3p1_8.maximum_horizontal_distance_water_vapor_tropospheric_column',
    'units' => 'm',
    'description' => 'Maximum horizontal distance for water vapor tropospheric column'
  },
  { 'name' => 'L2_rnvh3p1_8.maximum_vertical_distance_water_vapor_tropospheric_column',
    'units' => 'm',
    'description' => 'Maximum vertical distance for water vapor tropospheric column'
  },
  { 'name' => 'L2_rnvh3p1_8.nitrogen_dioxide_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for nitrogen dioxide, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_nitrogen_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rnvh3p1_8.sum_of_nitrogen_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_nitrogen_dioxide',
    'units' => 'mol/m3',
    'description' => 'Nitrogen dioxide surface concentration'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_nitrogen_dioxide_uncertainty',
    'units' => 'mol/m3',
    'description' => 'Independent uncertainty of nitrogen dioxide surface concentration, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rnvh3p1_8.surface_nitrogen_dioxide_index',
    'units' => '-',
    'description' => 'Nitrogen dioxide surface concentration index, 1=Fully mixed case from extrapolation to horizon, 2=Fully mixed case from largest pointing zenith angle, 3=Heterogeneous case from extrapolation to horizon, 4=Heterogeneous case from largest pointing zenith angle, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rnvh3p1_8.nitrogen_dioxide_heterogeneity_flag',
    'units' => '-',
    'description' => 'Nitrogen dioxide heterogeneity flag, 0=well mixed conditions, 1=heterogeneous conditions, -6=no surface concentration was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rnvh3p1_8.stratospheric_nitrogen_dioxide',
    'units' => 'molecules/cm2',
    'description' => 'Climatological nitrogen dioxide stratospheric column amount'
  },
  { 'name' => 'L2_rnvh3p1_8.stratospheric_nitrogen_dioxide_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of climatological nitrogen dioxide stratospheric column amount'
  },
  { 'name' => 'L2_rnvh3p1_8.tropospheric_nitrogen_dioxide',
    'units' => 'molecules/cm2',
    'description' => 'Nitrogen dioxide tropospheric vertical column amount'
  },
  { 'name' => 'L2_rnvh3p1_8.tropospheric_nitrogen_dioxide_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of nitrogen dioxide tropospheric vertical column amount , -4=tropospheric column was estimated from direct sun measurements using effective temperature, -5=tropospheric column was estimated from direct sun measurements using stratospheric climatology, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rnvh3p1_8.maximum_horizontal_distance_nitrogen_dioxide_tropospheric_column',
    'units' => 'm',
    'description' => 'Maximum horizontal distance for nitrogen dioxide tropospheric column'
  },
  { 'name' => 'L2_rnvh3p1_8.maximum_vertical_distance_nitrogen_dioxide_tropospheric_column',
    'units' => 'm',
    'description' => 'Maximum vertical distance for nitrogen dioxide tropospheric column'
  },
  { 'name' => 'L2_rnvh3p1_8.water_vapor_layer_top_height',
    'units' => 'm',
    'description' => 'Top height of water vapor layer 1, -6=no profile was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rnvh3p1_8.water_vapor_layer_amount',
    'units' => 'molecules/cm2',
    'description' => 'Partial water vapor vertical column amount in layer 1 , -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rnvh3p1_8.nitrogen_dioxide_layer_top_height',
    'units' => 'm',
    'description' => 'Top height of nitrogen dioxide layer 1, -6=no profile was retrieved since the maximum viewing zenith angle was below 87deg'
  },
  { 'name' => 'L2_rnvh3p1_8.nitrogen_dioxide_layer_amount',
    'units' => 'molecules/cm2',
    'description' => 'Partial nitrogen dioxide vertical column amount in layer 1 , -9e99=retrieval not successful'
  },

  #'{
  #' name' => 'L2_rnvs3p1_8.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2_rnvs3p1_8.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2_rnvs3p1_8.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2_rnvs3p1_8.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvs3p1_8.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvs3p1_8.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvs3p1_8.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvs3p1_8.rms_fitting_residuals',
    'units' => '-',
    'description' => 'rms of unweighted fitting residuals, -9=fitting not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.normalized_rms_fitting_residuals',
    'units' => '-',
    'description' => 'Normalized rms of fitting residuals weighted with independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvs3p1_8.expected_rms_unweighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected rms of unweighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvs3p1_8.expected_normalized_rms_weighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvs3p1_8.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2_rnvs3p1_8.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2_rnvs3p1_8.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2_rnvs3p1_8.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2_rnvs3p1_8.mean_nitrogen_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2_rnvs3p1_8.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature, 999=no effective temperature given'
  },
  { 'name' => 'L2_rnvs3p1_8.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2_rnvs3p1_8.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2_rnvs3p1_8.total_wavelength_shift',
    'units' => 'nm',
    'description' => 'Retrieved total wavelength shift, -9=no wavelength change fitting'
  },
  { 'name' => 'L2_rnvs3p1_8.resolution_change',
    'units' => '%',
    'description' => 'Retrieved resolution change, -999=no resolution change fitting'
  },
  { 'name' => 'L2_rnvs3p1_8.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2_rnvs3p1_8.number_of_bright_count_cycles',
    'units' => '-',
    'description' => 'Number of bright count cycles'
  },
  { 'name' => 'L2_rnvs3p1_8.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rnvs3p1_8.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rnvs3p1_8.atmospheric_variability',
    'units' => '%',
    'description' => 'Atmospheric variability, 999=no atmospheric variability was determined'
  },
  { 'name' => 'L2_rnvs3p1_8.aerosol_optical_depth_start',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at starting wavelength of fitting window'
  },
  { 'name' => 'L2_rnvs3p1_8.aerosol_optical_depth_center',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at center wavelength of fitting window'
  },
  { 'name' => 'L2_rnvs3p1_8.aerosol_optical_depth_end',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at ending wavelength of fitting window'
  },
  { 'name' => 'L2_rnvs3p1_8.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rnvs3p1_8.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=The dark count differs significantly from the dark map for too many pixels, 6=Absolute value of estimated average residual stray light level too high, 7=Although attempted, no wavelength change could be retrieved, 8=Absolute value of retrieved wavelength shift too large, 9=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2_rnvs3p1_8.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvs3p1_8.l2_fit_quality_flag',
    'units' => '-',
    'description' => 'L2Fit data quality flag, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rnvs3p1_8.sum_of_l2_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Wavelength shift too large, 3=Normalized rms of fitting residuals weighted with independent uncertainty too large'
  },
  { 'name' => 'L2_rnvs3p1_8.sum_of_l2_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvs3p1_8.nitrogen_dioxide_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for nitrogen dioxide, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rnvs3p1_8.sum_of_nitrogen_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rnvs3p1_8.sum_of_nitrogen_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvs3p1_8.nitrogen_dioxide_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Nitrogen dioxide total vertical column amount'
  },
  { 'name' => 'L2_rnvs3p1_8.nitrogen_dioxide_vertical_column_independent_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.nitrogen_dioxide_vertical_column_structured_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Structured uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.nitrogen_dioxide_vertical_column_common_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Total uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -8=not given, since not all components are given'
  },
  { 'name' => 'L2_rnvs3p1_8.nitrogen_dioxide_vertical_column_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Total uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -8=not given, since not all components are given'
  },
  { 'name' => 'L2_rnvs3p1_8.nitrogen_dioxide_vertical_rms_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'rms-based uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.temperature',
    'units' => 'C',
    'description' => 'Nitrogen dioxide effective temperature'
  },
  { 'name' => 'L2_rnvs3p1_8.temperature_independent_uncertainty',
    'units' => 'C',
    'description' => 'Independent uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.temperature_structured_uncertainty',
    'units' => 'C',
    'description' => 'Structured uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.temperature_common_uncertainty',
    'units' => 'C',
    'description' => 'Common uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.temperature_uncertainty',
    'units' => 'C',
    'description' => 'Total uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty or common uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvs3p1_8.direct_nitrogen_dioxide_air_mass_factor',
    'units' => '-',
    'description' => 'Direct nitrogen dioxide air mass factor'
  },
  { 'name' => 'L2_rnvs3p1_8.direct_nitrogen_dioxide_air_mass_factor_uncertainty',
    'units' => '-',
    'description' => ' Uncertainty of direct nitrogen dioxide air mass factor, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rnvs3p1_8.diffuse_correction',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for nitrogen dioxide, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },
  { 'name' => 'L2_rnvs3p1_8.stratospheric_nitrogen_dioxide',
    'units' => 'molecules/cm2',
    'description' => 'Climatological nitrogen dioxide stratospheric column amount'
  },
  { 'name' => 'L2_rnvs3p1_8.stratospheric_nitrogen_dioxide_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of climatological nitrogen dioxide stratospheric column amount'
  },

  #'{
  #' name' => 'L2_rout2p1_8.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2_rout2p1_8.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2_rout2p1_8.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2_rout2p1_8.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rout2p1_8.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rout2p1_8.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rout2p1_8.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rout2p1_8.rms_fitting_residuals',
    'units' => '-',
    'description' => 'rms of unweighted fitting residuals, -9=fitting not successful'
  },
  { 'name' => 'L2_rout2p1_8.normalized_rms_fitting_residuals',
    'units' => '-',
    'description' => 'Normalized rms of fitting residuals weighted with independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rout2p1_8.expected_rms_unweighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected rms of unweighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rout2p1_8.expected_normalized_rms_weighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rout2p1_8.pressure',
    'units' => 'hPa',
    'description' => ' Climatological station pressure'
  },
  { 'name' => 'L2_rout2p1_8.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2_rout2p1_8.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2_rout2p1_8.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2_rout2p1_8.mean_ozone_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2_rout2p1_8.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature'
  },
  { 'name' => 'L2_rout2p1_8.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2_rout2p1_8.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2_rout2p1_8.total_wavelength_shift',
    'units' => 'nm',
    'description' => 'Retrieved total wavelength shift, -9=no wavelength change fitting'
  },
  { 'name' => 'L2_rout2p1_8.resolution_change',
    'units' => '%',
    'description' => 'Retrieved resolution change, -999=no resolution change fitting'
  },
  { 'name' => 'L2_rout2p1_8.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2_rout2p1_8.number_of_bright_count_cycles',
    'units' => '-',
    'description' => 'Number of bright count cycles'
  },
  { 'name' => 'L2_rout2p1_8.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rout2p1_8.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rout2p1_8.atmospheric_variability',
    'units' => '%',
    'description' => 'Atmospheric variability, 999=no atmospheric variability was determined'
  },
  { 'name' => 'L2_rout2p1_8.aerosol_optical_depth_start',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at starting wavelength of fitting window'
  },
  { 'name' => 'L2_rout2p1_8.aerosol_optical_depth_center',
    'units' => '-',
    'description' => 'stimated aerosol optical depth at center wavelength of fitting window'
  },
  { 'name' => 'L2_rout2p1_8.aerosol_optical_depth_end',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at ending wavelength of fitting window'
  },
  { 'name' => 'L2_rout2p1_8.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rout2p1_8.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=The dark count differs significantly from the dark map for too many pixels, 6=Absolute value of estimated average residual stray light level too high, 7=Although attempted, no wavelength change could be retrieved, 8=Absolute value of retrieved wavelength shift too large, 9=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2_rout2p1_8.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rout2p1_8.l2_fit_quality_flag',
    'units' => '-',
    'description' => 'L2Fit data quality flag, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rout2p1_8.sum_of_l2_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Wavelength shift too large, 3=Normalized rms of fitting residuals weighted with independent uncertainty too large'
  },
  { 'name' => 'L2_rout2p1_8.sum_of_l2_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rout2p1_8.ozone_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for ozone, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rout2p1_8.sum_of_ozone_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for ozone exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rout2p1_8.sum_of_ozone_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for ozone exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rout2p1_8.ozone_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Ozone total vertical column amount , -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rout2p1_8.ozone_vertical_column_independent_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of ozone total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rout2p1_8.ozone_vertical_column_structured_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Structured uncertainty of ozone total vertical column amount , -1=cross section is zero in this wavelength range, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rout2p1_8.ozone_vertical_column_common_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Total uncertainty of ozone total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -8=not given, since not all components are given'
  },
  { 'name' => 'L2_rout2p1_8.ozone_vertical_column_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Total uncertainty of ozone total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -8=not given, since not all components are given'
  },
  { 'name' => 'L2_rout2p1_8.ozone_vertical_column_rms_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'rms-based uncertainty of ozone total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rout2p1_8.temperature',
    'units' => 'C',
    'description' => 'Ozone effective temperature'
  },
  { 'name' => 'L2_rout2p1_8.temperature_independent_uncertainty',
    'units' => 'C',
    'description' => 'Independent uncertainty of ozone effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rout2p1_8.temperature_structured_uncertainty',
    'units' => 'C',
    'description' => 'Structured uncertainty of ozone effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rout2p1_8.temperature_common_uncertainty',
    'units' => 'C',
    'description' => 'Common uncertainty of ozone effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rout2p1_8.temperature_uncertainty',
    'units' => 'C',
    'description' => 'Total uncertainty of ozone effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty or common uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rout2p1_8.direct_ozone_air_mass_factor',
    'units' => '-',
    'description' => 'Direct ozone air mass factor'
  },
  { 'name' => 'L2_rout2p1_8.ozone_air_mass_factor_uncertainty',
    'units' => '-',
    'description' => 'Uncertainty of direct ozone air mass factor, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rout2p1_8.diffuse_correction',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for ozone, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },

  #'{
  #' name' => 'L2_rsus1p1_8.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2_rsus1p1_8.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2_rsus1p1_8.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2_rsus1p1_8.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rsus1p1_8.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rsus1p1_8.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rsus1p1_8.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rsus1p1_8.rms_fitting_residuals',
    'units' => '-',
    'description' => 'rms of unweighted fitting residuals, -9=fitting not successful'
  },
  { 'name' => 'L2_rsus1p1_8.normalized_rms_fitting_residuals',
    'units' => '-',
    'description' => 'Normalized rms of fitting residuals weighted with independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rsus1p1_8.expected_rms_unweighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected rms of unweighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rsus1p1_8.expected_normalized_rms_weighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rsus1p1_8.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2_rsus1p1_8.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2_rsus1p1_8.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2_rsus1p1_8.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2_rsus1p1_8.mean_sulfur_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2_rsus1p1_8.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature, 999=no effective temperature given'
  },
  { 'name' => 'L2_rsus1p1_8.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2_rsus1p1_8.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2_rsus1p1_8.total_wavelength_shift',
    'units' => 'nm',
    'description' => 'Retrieved total wavelength shift, -9=no wavelength change fitting'
  },
  { 'name' => 'L2_rsus1p1_8.resolution_change',
    'units' => '%',
    'description' => 'Retrieved resolution change, -999=no resolution change fitting'
  },
  { 'name' => 'L2_rsus1p1_8.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2_rsus1p1_8.number_of_bright_count_cycles',
    'units' => '-',
    'description' => 'Number of bright count cycles'
  },
  { 'name' => 'L2_rsus1p1_8.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rsus1p1_8.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rsus1p1_8.atmospheric_variability',
    'units' => '%',
    'description' => 'Atmospheric variability, 999=no atmospheric variability was determined'
  },
  { 'name' => 'L2_rsus1p1_8.aerosol_optical_depth_start',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at starting wavelength of fitting window'
  },
  { 'name' => 'L2_rsus1p1_8.aerosol_optical_depth_center',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at center wavelength of fitting window'
  },
  { 'name' => 'L2_rsus1p1_8.aerosol_optical_depth_end',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at ending wavelength of fitting window'
  },
  { 'name' => 'L2_rsus1p1_8.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rsus1p1_8.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=The dark count differs significantly from the dark map for too many pixels, 6=Absolute value of estimated average residual stray light level too high, 7=Although attempted, no wavelength change could be retrieved, 8=Absolute value of retrieved wavelength shift too large, 9=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2_rsus1p1_8.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rsus1p1_8.l2_fit_quality_flag',
    'units' => '-',
    'description' => 'L2Fit data quality flag, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rsus1p1_8.sum_of_l2_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Wavelength shift too large, 3=Normalized rms of fitting residuals weighted with independent uncertainty too large'
  },
  { 'name' => 'L2_rsus1p1_8.sum_of_l2_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for sulfur dioxide, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rsus1p1_8.sum_of_sulfur_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for sulfur dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rsus1p1_8.sum_of_sulfur_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for sulfur dioxide exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Sulfur dioxide total vertical column amount , -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_vertical_column_independent_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of sulfur dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_vertical_column_structured_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Structured uncertainty of sulfur dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_vertical_column_common_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Common uncertainty of sulfur dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_vertical_column_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Total uncertainty of sulfur dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -8=not given, since not all components are given'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_vertical_column_rms_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'rms-based uncertainty of sulfur dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.temperature',
    'units' => 'C',
    'description' => 'Sulfur dioxide effective temperature'
  },
  { 'name' => 'L2_rsus1p1_8.temperature_independent_uncertainty',
    'units' => 'C',
    'description' => 'Independent uncertainty of sulfur dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.temperature_structured_uncertainty',
    'units' => 'C',
    'description' => 'Structured uncertainty of sulfur dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.temperature_common_uncertainty',
    'units' => 'C',
    'description' => 'Common uncertainty of sulfur dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.temperature_uncertainty',
    'units' => 'C',
    'description' => 'Total uncertainty of sulfur dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty or common uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rsus1p1_8.direct_sulfur_dioxide_air_mass_factor',
    'units' => '-',
    'description' => 'Direct sulfur dioxide air mass factor'
  },
  { 'name' => 'L2_rsus1p1_8.sulfur_dioxide_air_mass_factor_uncertainty',
    'units' => '-',
    'description' => 'Uncertainty of direct sulfur dioxide air mass factor, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rsus1p1_8.diffuse_correction',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for sulfur dioxide, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },

  #'{
  #' name' => 'L2Trop_rnvh1p1_7.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2Trop_rnvh1p1_7.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.pointing_zenith_angle',
    'units' => 'deg',
    'description' => 'Pointing zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.pointing_azimuth_angle',
    'units' => 'deg',
    'description' => 'Pointing azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.water_vapor_surface',
    'units' => 'ppb',
    'description' => 'Water vapor surface concentration, -9e99=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.water_vapor_surface_uncertainty',
    'units' => 'ppb',
    'description' => 'Uncertainty of water vapor surface concentration, -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.water_vapor_tropospheric',
    'units' => 'cm',
    'description' => 'Water vapor tropospheric vertical column amount, -9e99=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.water_vapor_tropospheric_uncertainty',
    'units' => 'cm',
    'description' => 'Uncertainty of water vapor tropospheric vertical column amount, -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.water_vapor_surface_index',
    'units' => '-',
    'description' => 'Water vapor surface concentration index, integer >0 (see manual), -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.water_vapor_heterogeneity_flag',
    'units' => '-',
    'description' => 'Water vapor heterogeneity flag, 0=well mixed conditions, 1=heterogeneous conditions, -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.water_vapor_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for water vapor: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_water_vapor_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for water vapor exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Uncertainty too high, 2=Signal to noise ratio too low, 3=Air mass factor too large'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_water_vapor_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for water vapor exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.direct_water_vapor_air_mass_factor',
    'units' => '-',
    'description' => 'Direct water vapor air mass factor'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.nitrogen_dioxide_surface',
    'units' => 'ppb',
    'description' => 'Nitrogen dioxide surface concentration, -9e99=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.nitrogen_dioxide_surface_uncertainty',
    'units' => 'ppb',
    'description' => 'Uncertainty of nitrogen dioxide surface concentration, -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.nitrogen_dioxide_tropospheric',
    'units' => 'molecules/cm2',
    'description' => 'Nitrogen dioxide tropospheric vertical column amount, -9e99=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.nitrogen_dioxide_tropospheric_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of nitrogen dioxide tropospheric vertical column amount, -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.nitrogen_dioxide_surface_index',
    'units' => '-',
    'description' => 'Nitrogen dioxide surface concentration index, integer >0 (see manual), -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.nitrogen_dioxide_heterogeneity_flag',
    'units' => '-',
    'description' => 'Nitrogen dioxide heterogeneity flag, 0=well mixed conditions, 1=heterogeneous conditions, -8=retrieval not successful'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.nitrogen_dioxide_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for nitrogen dioxide: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_nitrogen_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Uncertainty too high, 2=Signal to noise ratio too low, 3=Air mass factor too large'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_nitrogen_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.direct_nitrogen_dioxide_air_mass_factor',
    'units' => '-',
    'description' => 'Direct nitrogen dioxide air mass factor'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.fitting_result_index',
    'units' => '-',
    'description' => 'Maximum fitting result index: 0,1,2=no error or warning, 3,4=warning, >4=error'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.mean_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Normalized rms of spectral fitting residuals weighted with measured uncertainty, mean over all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Normalized rms of spectral fitting residuals weighted with measured uncertainty, minimum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Normalized rms of spectral fitting residuals weighted with measured uncertainty, maximum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.mean_expected_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on measured uncertainty, mean over all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_expected_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on measured uncertainty, minimum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_expected_normalized_rms_weighted_measured_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on measured uncertainty, maximum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.mean_expected_normalized_rms_weighted_instrumental_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on instrumental uncertainty, mean over all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_expected_normalized_rms_weighted_instrumental_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on instrumental uncertainty, minimum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_expected_normalized_rms_weighted_instrumental_uncertainty',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted spectral fitting residuals based on instrumental uncertainty, maximum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.temperature',
    'units' => 'C',
    'description' => 'Climatological station temperature'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.o2o2_height',
    'units' => 'm',
    'description' => 'Climatological effective O2O2 height'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_l2_fit_data_quality_flag',
    'units' => '-',
    'description' => 'Level 2 Fit data quality flag, minimum of all sets: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_l2_fit_data_quality_flag',
    'units' => '-',
    'description' => 'Level 2 Fit data quality flag, maximum of all sets: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, maximum of all sets, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Weighted rms of spectral fitting too large, 3=Wavelength shift too large'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit, maximum of all sets (same parameters as for DQ1)'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag, minimum of all sets: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag, maximum of all sets: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, maximum of all sets, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=Absolute value of estimated average residual stray light level too high, 6=Although attempted, no wavelength change could be retrieved, 7=Absolute value of retrieved wavelength shift too large, 8=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit, maximum of all sets (same parameters as for DQ1)'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature, mean over all sets, 999=no effective temperature given'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.mean_residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level, mean over all sets (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level, minimum of all sets (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level, maximum of all sets (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.mean_wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, mean over all sets, -9=no wavelength change determination'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, minimum of all sets, -9=no wavelength change determination'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, maximum of all sets, -9=no wavelength change determination'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.mean_wavelength_shift_from_spectral_fitting',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from spectral fitting, mean over all sets, -9=no wavelength change fitting'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_wavelength_shift_from_spectral_fitting',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from spectral fitting, minimum of all sets, -9=no wavelength change fitting'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_wavelength_shift_from_spectral_fitting',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from spectral fitting, maximum of all sets, -9=no wavelength change fitting'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_integration_time',
    'units' => 'ms',
    'description' => 'Integration time, minimum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_integration_time',
    'units' => 'ms',
    'description' => 'Integration time, maximum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.mean_number_of_dark_count_cycles',
    'units' => '-',
    'description' => 'Number of dark count cycles, mean over all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_number_of_dark_count_cycles',
    'units' => '-',
    'description' => 'Number of dark count cycles, minimum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_number_of_dark_count_cycles',
    'units' => '-',
    'description' => 'Number of dark count cycles, maximum of all sets'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, minimum of all sets, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, maximum of all sets, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.minimum_filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, minimum of all sets, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2Trop_rnvh1p1_7.maximum_filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, maximum of all sets, 0=filterwheel not used, 1-9 are valid positions'
  },

  #'{
  #' name' => 'L2_rnvssp1_8.timestamp',
  # 'units' => 'yyyymmddhhmmss',
  # 'description' => 'UT date and time for center of measurement, yyyymmddThhmmssZ (ISO 8601)'
  #},
  { 'name' => 'L2_rnvssp1_8.days_since_2000',
    'units' => 'days',
    'description' => 'Fractional days since 1-Jan-2000 UT midnight for center of measurement'
  },
  { 'name' => 'L2_rnvssp1_8.measurement_duration',
    'units' => 's',
    'description' => 'Effective duration of measurement in seconds'
  },
  { 'name' => 'L2_rnvssp1_8.solar_zenith_angle',
    'units' => 'deg',
    'description' => 'Solar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvssp1_8.solar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Solar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvssp1_8.lunar_zenith_angle',
    'units' => 'deg',
    'description' => 'Lunar zenith angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvssp1_8.lunar_azimuth_angle',
    'units' => 'deg',
    'description' => 'Lunar azimuth trig angle for center of measurement in degree'
  },
  { 'name' => 'L2_rnvssp1_8.rms_fitting_residuals',
    'units' => '-',
    'description' => 'rms of unweighted fitting residuals, -9=fitting not successful'
  },
  { 'name' => 'L2_rnvssp1_8.normalized_rms_fitting_residuals',
    'units' => '-',
    'description' => 'Normalized rms of fitting residuals weighted with independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvssp1_8.expected_rms_unweighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected rms of unweighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvssp1_8.expected_normalized_rms_weighted_fitting_residuals',
    'units' => '-',
    'description' => 'Expected normalized rms of weighted fitting residuals based on independent uncertainty, -9=fitting not successful or no uncertainty given'
  },
  { 'name' => 'L2_rnvssp1_8.pressure',
    'units' => 'hPa',
    'description' => 'Climatological station pressure'
  },
  { 'name' => 'L2_rnvssp1_8.data_processing_type_index',
    'units' => '-',
    'description' => 'Data processing type index'
  },
  { 'name' => 'L2_rnvssp1_8.calibration_file_version',
    'units' => '-',
    'description' => 'Calibration file version'
  },
  { 'name' => 'L2_rnvssp1_8.calibration_file_date',
    'units' => 'yyyymmdd',
    'description' => 'Calibration file validity starting date'
  },
  { 'name' => 'L2_rnvssp1_8.mean_nitrogen_dioxide_total_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Mean value of measured data inside fitting window'
  },
  { 'name' => 'L2_rnvssp1_8.wavelength_temperature',
    'units' => 'C',
    'description' => 'Wavelength effective temperature'
  },
  { 'name' => 'L2_rnvssp1_8.residual_stray_light_level',
    'units' => '%',
    'description' => 'Estimated average residual stray light level (only valid for stray light correction methods 2 and higher)'
  },
  { 'name' => 'L2_rnvssp1_8.wavelength_shift_from_l1',
    'units' => 'nm',
    'description' => 'Retrieved wavelength shift from level 1 data, -9=no wavelength change determination'
  },
  { 'name' => 'L2_rnvssp1_8.total_wavelength_shift',
    'units' => 'nm',
    'description' => 'Retrieved total wavelength shift, -9=no wavelength change fitting'
  },
  { 'name' => 'L2_rnvssp1_8.resolution_change',
    'units' => '%',
    'description' => 'Retrieved resolution change, -999=no resolution change fitting'
  },
  { 'name' => 'L2_rnvssp1_8.integration_time',
    'units' => 'ms',
    'description' => 'Integration time'
  },
  { 'name' => 'L2_rnvssp1_8.number_of_bright_count_cycles',
    'units' => '-',
    'description' => 'Number of bright count cycles'
  },
  { 'name' => 'L2_rnvssp1_8.filterwheel1_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #1, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rnvssp1_8.filterwheel2_position',
    'units' => '-',
    'description' => 'Effective position of filterwheel #2, 0=filterwheel not used, 1-9 are valid positions'
  },
  { 'name' => 'L2_rnvssp1_8.atmospheric_variability',
    'units' => '%',
    'description' => 'Atmospheric variability, 999=no atmospheric variability was determined'
  },
  { 'name' => 'L2_rnvssp1_8.aerosol_optical_depth_start',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at starting wavelength of fitting window'
  },
  { 'name' => 'L2_rnvssp1_8.aerosol_optical_depth_center',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at center wavelength of fitting window'
  },
  { 'name' => 'L2_rnvssp1_8.aerosol_optical_depth_end',
    'units' => '-',
    'description' => 'Estimated aerosol optical depth at ending wavelength of fitting window'
  },
  { 'name' => 'L2_rnvssp1_8.l1_data_quality_flag',
    'units' => '-',
    'description' => 'Level 1 data quality flag: 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rnvssp1_8.sum_of_l1_quality_exceeding_dq1',
    'units' => '-',
    'description' => ' Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ1 limit, 0=Saturated data, 1=Too few dark counts measurements, 2=No temperature given or effective temperature too different from the reference temperature, 3=Dark count too high, 4=Unsuccessful dark background fitting, 5=The dark count differs significantly from the dark map for too many pixels, 6=Absolute value of estimated average residual stray light level too high, 7=Although attempted, no wavelength change could be retrieved, 8=Absolute value of retrieved wavelength shift too large, 9=Retrieved wavelength shift differs too much from the shift predicted by the effective temperature'
  },
  { 'name' => 'L2_rnvssp1_8.sum_of_l1_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L1 data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvssp1_8.l2_fit_quality_flag',
    'units' => '-',
    'description' => 'L2Fit data quality flag, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality'
  },
  { 'name' => 'L2_rnvssp1_8.sum_of_l2_fit_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ1 limit, 0=L1 data quality above 0, 1=Spectral fitting was not successful, 2=Wavelength shift too large, 3=Normalized rms of fitting residuals weighted with independent uncertainty too large'
  },
  { 'name' => 'L2_rnvssp1_8.sum_of_l2_fit_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2Fit data quality parameter exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvssp1_8.nitrogen_dioxide_l2_quality_flag',
    'units' => '-',
    'description' => 'L2 data quality flag for nitrogen dioxide, 0=assured high quality, 1=assured medium quality, 2=assured low quality, 10=not-assured high quality, 11=not-assured medium quality, 12=not-assured low quality, 20=unusable high quality, 21=unusable medium quality, 22=unusable low quality'
  },
  { 'name' => 'L2_rnvssp1_8.sum_of_nitrogen_dioxide_quality_exceeding_dq1',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ1 limit, 0=L2Fit data quality above 0, 1=Retrieval error, 2=Air mass factor too large, 3=Atmospheric variability too large'
  },
  { 'name' => 'L2_rnvssp1_8.sum_of_nitrogen_dioxide_quality_exceeding_dq2',
    'units' => '-',
    'description' => 'Sum over 2^i using those i, for which the corresponding L2 data quality parameter for nitrogen dioxide exceeds the DQ2 limit (same parameters as for DQ1)'
  },
  { 'name' => 'L2_rnvssp1_8.nitrogen_dioxide_vertical_column_amount',
    'units' => 'molecules/cm2',
    'description' => 'Nitrogen dioxide total vertical column amount , -9e99=retrieval not successful'
  },
  { 'name' => 'L2_rnvssp1_8.nitrogen_dioxide_vertical_column_independent_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Independent uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.nitrogen_dioxide_vertical_column_structured_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Structured uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.nitrogen_dioxide_vertical_column_common_uncertainty',
    'units' => 'molecules/cm2',
    'description' => ' Common uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.nitrogen_dioxide_vertical_column_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Total uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -5=no independent uncertainty input was given, -6=no common uncertainty input was given, -7=not given since method "MEAS" was chosen, -8=not given, since not all components are given'
  },
  { 'name' => 'L2_rnvssp1_8.nitrogen_dioxide_vertical_rms_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'rms-based uncertainty of nitrogen dioxide total vertical column amount , -1=cross section is zero in this wavelength range, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.temperature',
    'units' => 'C',
    'description' => 'Nitrogen dioxide effective temperature'
  },
  { 'name' => 'L2_rnvssp1_8.temperature_independent_uncertainty',
    'units' => 'C',
    'description' => 'Independent uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.temperature_structured_uncertainty',
    'units' => 'C',
    'description' => 'Structured uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.temperature_common_uncertainty',
    'units' => 'C',
    'description' => 'Common uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -6=no independent uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.temperature_uncertainty',
    'units' => 'C',
    'description' => 'Total uncertainty of nitrogen dioxide effective temperature , -1=temperature fitting was requested, but cross section is zero in this wavelength range, -2=no temperature fitting was requested and output for effective temperature and common uncertainty of it is based on f-code, -3=spectral fitting was done, but no independent uncertainty could be retrieved, -4=temperature fitting was requested, but differential optical depth is too small to retrieve temperature, -5=spectral fitting was done without using the independent uncertainty input, -6=no independent uncertainty or common uncertainty input was given, -9=spectral fitting was not successful'
  },
  { 'name' => 'L2_rnvssp1_8.direct_nitrogen_dioxide_air_mass_factor',
    'units' => '-',
    'description' => 'Direct nitrogen dioxide air mass factor'
  },
  { 'name' => 'L2_rnvssp1_8.direct_nitrogen_dioxide_air_mass_factor_uncertainty',
    'units' => '-',
    'description' => 'Uncertainty of direct nitrogen dioxide air mass factor, -7=uncertainty could not be retrieved since slant column uncertainties were missing'
  },
  { 'name' => 'L2_rnvssp1_8.diffuse_correction',
    'units' => '%',
    'description' => 'Diffuse correction applied before fitting at effective fitting wavelength for nitrogen dioxide, 0=no diffuse correction applied or fitting not successful, >0=measured diffuse correction, <0=(negative value of) calculated diffuse correction'
  },
  { 'name' => 'L2_rnvssp1_8.stratospheric_nitrogen_dioxide',
    'units' => 'molecules/cm2',
    'description' => 'Climatological nitrogen dioxide stratospheric column amount'
  },
  { 'name' => 'L2_rnvssp1_8.stratospheric_nitrogen_dioxide_uncertainty',
    'units' => 'molecules/cm2',
    'description' => 'Uncertainty of climatological nitrogen dioxide stratospheric column amount'
  },
);


################################## VARIABLES #################################


# Parsed from the URL query string:

my $service       = ''; # wcs.
my $version       = ''; # 1.0.0.
my $request       = ''; # getcapabilities or describecoverage or getcoverage.
my $coverage      = ''; # L2Tot_rnvs0p1_7.nitrogen_dioxide_total_vertical_column_amount.
my $format        = ''; # xdr, ascii, netcdf.
my $compress      = ''; # 1 = | gzip -c otherwise don't compress (default).
my $time          = ''; # E.g., 2014-07-15t00:00:00z/2014-07-15t23:59:59z.
my $bbox          = ''; # E.g., -130,24,-60,50,0,5000.
my $regrid        = ''; # E.g., nearest, mean, weighted.
my $regrid_aggregate = ''; # E.g., none, all, daily.
my $lambert       = ''; # E.g., 33,45,-97,40.
my $stereographic = ''; # E.g., -98,90,45.
my $mercator      = ''; # E.g., -98.
my $lonlat        = '';
my $ellipsoid     = ''; # E.g., 6370000,6370000.
my $grid          = ''; # E.g., 279,240,-1008000,-1620000,12000,12000.
my $levels        = ''; # E.g,22,2,10000,1.0,...,0.0,9.81,287.04,50,290,100000.
my $instrument    = ''; # Instrument number to match.
my $minimum_quality = ''; # high (default), medium, low.
my $aggregate          = ''; # none, hourly, daily, monthly, all.

# Derived from the above parsed values:

my $starting_timestamp = 0; # yyyymmddhh, e.g., 2014071500.
my $ending_timestamp   = 0; # yyyymmddhh, e.g., 2014071800.
my $hours              = 0; # E.g., 5 days = 5 x 24 = 120.
my $source     = ''; # File type: L2Tot_rnvs0p1_7, etc.
my $variable   = ''; # nitrogen_dioxide_total_vertical_column_amount, etc.
my $command    = ''; # Complete subset command to run.


################################## ROUTINES ##################################


main();


sub main {
  my $result = 0;

  if ( ! parse_url() ) {
    print "Content-type: text/plain; charset=iso-8859-1\n\n"; # For webserver
  } elsif ( $request eq 'getcapabilities' ) {
    print "Content-type: text/xml; charset=iso-8859-1\n\n"; # For webserver
    print_capabilities();
    $result = 1;
  } elsif ( $request eq 'describecoverage' ) {
    print "Content-type: text/xml; charset=iso-8859-1\n\n"; # For webserver
    print_coverage_description();
    $result = 1;
  } elsif ( $request eq 'getcoverage' ) {
    print "Content-type: $content_types{ $format }; charset=iso-8859-1\n\n";
    compute_time_range();
    construct_command();
    $result = execute_command( $command );

    if ( $format ne 'original' ) {

      if ( ! $debugging ) {
        unlink( $temp_file_name ); # Remove temporary file.
      }
    }
  } elsif ( $request eq 'getmetadata' ) {
    print "Content-type: text/plain; charset=iso-8859-1\n\n"; # For webserver
    compute_time_range();
    construct_command();
    print $metadata_content;

    if ( $format eq 'original' ) {
      my $i = index( $command, '|' );
      my $list_files_command = substr( $command, 0, $i );
      print $metadata_content_original;
      $result = execute_command( $list_files_command );
      print "\n";
    } else {
      my $i = index( $command, '>' );
      my $list_files_command = substr( $command, 0, $i );
      print $metadata_content_processed;
      $result = execute_command( $list_files_command );
      print "\n$command\n\n";
    }
  }

  $result = 1 - $result; # UNIX: zero is success, non-zero is failure.
  debug( "exit result = $result" );
  exit $result;
}



# Print web server capabilities metadata.

sub print_capabilities {
  print '<?xml version="1.0" encoding="UTF-8" ?>' . "\n";
  print '<WCS_Capabilities version="1.0.0" ';
  print 'xmlns="https://www.opengeospatial.org/standards/wcs" ';
  print 'xmlns:gml="https://www.opengis.net//gml" ';
  print 'xmlns:xlink="https://www.w3.org/1999/xlink">';
  print '
    <Service>
        <metadataLink xlink:type="simple" xlink:href="https://www.vaisala.com/en/products/pandoras/Pages/CL51.aspx" metadataType="other" />
        <description>EPA pandora Web Server 1.0.0</description>
        <name>EPA_pandora_OGC_WCS_1.0.0</name>
        <label>EPA pandora Web Server 1.0.0</label>
        <keywords>
            <keyword>EPA</keyword>
            <keyword>pandora</keyword>
            <keyword>interoperability</keyword>
        </keywords>
        <responsibleParty>
            <individualName>Todd Plessel</individualName>
            <organisationName>EPA Vislab</organisationName>
            <contactInfo>
                <onlineResource xlink:type="simple" xlink:href="mailto:plessel.todd@epa.gov" />
            </contactInfo>
        </responsibleParty>
        <fees>NONE</fees>
        <accessConstraints>NONE</accessConstraints>
    </Service>
    <Capability>
        <Request>
            <GetCapabilities>
                <DCPType>
                    <HTTP>
                        <Get>
                            <OnlineResource xlink:type="simple" xlink:href="https://ofmpub.epa.gov/rsig/pandoraserver?" />
                        </Get>
                        <Post>
                            <OnlineResource xlink:type="simple" xlink:href="https://ofmpub.epa.gov/rsig/pandoraserver" />
                        </Post>
                    </HTTP>
                </DCPType>
            </GetCapabilities>
            <DescribeCoverage>
                <DCPType>
                    <HTTP>
                        <Get>
                            <OnlineResource xlink:type="simple" xlink:href="https://ofmpub.epa.gov/rsig/pandoraserver?" />
                        </Get>
                        <Post>
                            <OnlineResource xlink:type="simple" xlink:href="https://ofmpub.epa.gov/rsig/pandoraserver" />
                        </Post>
                    </HTTP>
                </DCPType>
            </DescribeCoverage>
            <GetCoverage>
                <DCPType>
                    <HTTP>
                        <Get>
                            <OnlineResource xlink:type="simple" xlink:href="https://ofmpub.epa.gov/rsig/pandoraserver?" />
                        </Get>
                        <Post>
                            <OnlineResource xlink:type="simple" xlink:href="https://ofmpub.epa.gov/rsig/pandoraserver" />
                        </Post>
                    </HTTP>
                </DCPType>
            </GetCoverage>
        </Request>
        <Exception>
            <Format>text/xml; charset="utf-8"</Format>
        </Exception>
    </Capability>
    <ContentMetadata version="1.0.0">
  ';

  my $variable_count = @metadata;

  for ( my $variable_index = 0; $variable_index < $variable_count;
        ++$variable_index ) {
    my $this_name        = $metadata[ $variable_index ]->{ name };
    my $this_units       = $metadata[ $variable_index ]->{ units };
    my $this_description = $metadata[ $variable_index ]->{ description };
    my @parts = split( /\./, $this_name );
    my $parts_count = @parts;
    my $this_variable = '';

    if ( $parts_count == 2 ) {
      $this_variable = $parts[ 1 ];
      print "        <CoverageOfferingBrief>\n";
      print "            <name>$this_name</name>\n";
      print "            <label>$this_variable($this_units)</label>\n";
      print "            <description>$this_description</description>\n";
      print '            <lonLatEnvelope srsName="WGS84(DD)">';
      print "\n";
      print "                <gml:pos>-125 20</gml:pos>\n";
      print "                <gml:pos>-60 50</gml:pos>\n";
      print "            </lonLatEnvelope>\n";
      print "        </CoverageOfferingBrief>\n";
    }
  }

  print '  </ContentMetadata>
</WCS_Capabilities>
';
}



# Print web server coverage description metadata.

sub print_coverage_description {
  print '<?xml version="1.0" encoding="UTF-8" ?>';
  print '<CoverageDescription version="1.0.0" ';
  print 'xmlns="https://www.opengeospatial.org/standards/wcs" ';
  print 'xmlns:gml="https://www.opengis.net/gml" ';
  print 'xmlns:xlink="https://www.w3.org/1999/xlink">';

  my $variable_count = @metadata;

  for ( my $variable_index = 0; $variable_index < $variable_count;
        ++$variable_index ) {
    my $this_name        = $metadata[ $variable_index ]->{ name };
    my $this_units       = $metadata[ $variable_index ]->{ units };
    my $this_description = $metadata[ $variable_index ]->{ description };
    my @parts = split( /\./, $this_name );
    my $parts_count = @parts;
    my $this_variable = '';

    if ( $parts_count == 2 ) {
      $this_variable = $parts[ 1 ];

      if ( $coverage eq '' or $coverage eq $this_name ) {
        print "        <CoverageOfferingBrief>\n";
        print "            <name>$this_name</name>\n";
        print "            <label>$this_variable($this_units)</label>\n";
        print "            <description>$this_description</description>\n";
        print '            <lonLatEnvelope srsName="WGS84(DD)">';
        print "\n";
        print "                <gml:pos>-125 20</gml:pos>\n";
        print "                <gml:pos>-60 50</gml:pos>\n";
        print "            </lonLatEnvelope>\n";
        print '
        <domainSet>
            <spatialDomain>
                <gml:Envelope srsName="WGS84(DD)">
                    <gml:pos>-125 20</gml:pos>
                    <gml:pos>-60 50</gml:pos>
                </gml:Envelope>
            </spatialDomain>
            <temporalDomain>
                <timePeriod>
                    <beginPosition>2016-01-01T00:00:00Z</beginPosition>
                    <timeResolution>PT1H</timeResolution>
                </timePeriod>
            </temporalDomain>
        </domainSet>
        <rangeSet>
            <RangeSet>
        <supportedCRSs>
            <requestResponseCRSs>CRS:84</requestResponseCRSs>
            <nativeCRSs>CRS:84</nativeCRSs>
        </supportedCRSs>
        <supportedFormats>
            <formats>ASCII XDR NetCDF-COARDS NetCDF-IOAPI original</formats>
        </supportedFormats>
        <supportedInterpolations>
            <interpolationMethod>none</interpolationMethod>
        </supportedInterpolations>
    </CoverageOffering>';
        print "        </CoverageOfferingBrief>\n";
      }
    }
  }

  print '
</CoverageDescription>
';
}



# Parse URL parameters into variables.

sub parse_url {
  use CGI qw/ untaint /;     # Load Safe untainting CGI routines.
  $CGI::DISABLE_UPLOADS = 1; # Disable uploads.
  $CGI::POST_MAX = 1024;     # Limit posts to 1024 bytes.
  my $query = new CGI;       # Parse QUERY_STRING.
  %ENV = ();                 # Unset all environment variables.
  my @names = $query->param; # Extract names of parameters.
  my $count = @names;
  my $result = 0;
  debug( "$program_name @names\n$count" );

  for ( my $parameter = 0; $parameter < $count; ++$parameter) {
    $_ = $names[ $parameter ];                # $_ is tainted.
    s/[^A-Za-z1]/_/go;                        # Untaint $_.
    my $option = $_;                          # $option is untainted.
    $_ = $query->param( $option );            # $_ is tainted.
    s/[^\w\-.,:\/]/_/go;                      # Untaint $_.
    my $value = $_;                           # $value is untainted.
    my $lowercase_option = lc( $option );
    my $lowercase_value  = lc( $value );
    debug( "$lowercase_option $lowercase_value" );

    if ( $parsers{ $lowercase_option } ) {
      $result = $parsers{ $lowercase_option }->( $lowercase_value );
    } else {
      print STDERR "\nInvalid option #$parameter\n";
      $result = 0;
    }

    if ( ! $result ) {
      $parameter = $count; # Finish looping.
    }
  }

  $result = $result && required_options_specified();
  return $result;
}



# Parse service option.

sub parse_service_option {
  my $value = shift;
  my $result = parse_option( $service, $value, 'SERVICE', 'wcs' );
  return $result;
}



# Parse version option.

sub parse_version_option {
  my $value = shift;
  my $result = parse_option( $version, $value, 'VERSION', '1.0.0' );
  return $result;
}



# Parse request option.

sub parse_request_option {
  my $value = shift;
  my $result =
    parse_option( $request, $value, 'REQUEST',
                  'getcoverage getcapabilities describecoverage getmetadata' );
  return $result;
}



# Parse coverage option.

sub parse_coverage_option {
  my $value = shift;
  my $result = 0;

  if ( $coverage ne '' ) {
    print STDERR "\nRedundant COVERAGE option\n";
  } else {
    my @parts = split( /\./, $value );
    my $parts_count = @parts;

    # TEMP HACK for backward compatibility:

    if ( $parts_count == 1 &&  $parts[ 0 ] eq 'ozone' ) {
      @parts = split( /\./, 'L2_rout2p1_8.ozone_vertical_column_amount'  );
      $parts_count = @parts;
    }
 
    if ( $parts_count == 1 ) {

      if ( $parts[ 0 ] eq 'id' ) {
        $source = 'locations';
        $variable = 'id';
        $coverage = "$source.$variable";
        $result = 1;
      }
    } elsif ( $parts_count == 2 ) {
      $source   = lc( $parts[ 0 ] );
      $variable = lc( $parts[ 1 ] );

      $source =~ s/l2/L2/;
      $source =~ s/tot_/Tot_/;
      $source =~ s/trop_/Trop_/;

      $coverage = "$source.$variable";

      my $variable_count = @metadata;

      for ( my $variable_index = 0; $variable_index < $variable_count;
            ++$variable_index ) {
        my $this_name = $metadata[ $variable_index ]->{ name };

        if ( $coverage eq $this_name ) {
          $result = 1;
          $variable_index = $variable_count;
        }
      }
    }

    if ( ! $result ) {
      print STDERR "\nInvalid COVERAGE option\n";
    }
  }

  return $result;
}



# Parse format option:

sub parse_format_option {
  my $value = shift;
  my $result = parse_option( $format, $value, 'FORMAT',
                             'xdr ascii netcdf-coards netcdf-ioapi original' );
  return $result;
}



# Parse time option.

sub parse_time_option {
  my $value = shift;
  my $result = 0;

  if ( $time ne '' ) {
    print STDERR "\nRedundant TIME option\n";
  } else {
    $time = $value;
    my $is_valid = is_valid_time( $time );

    if ( ! $is_valid ) {
      print STDERR "\nInvalid TIME option\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse bbox option.

sub parse_bbox_option {
  my $value = shift;
  my $result = 0;

  if ( $bbox ne '' ) {
    print STDERR "\nRedundant BBOX option\n";
  } else {
    $bbox = $value;
    my @bounds = split( /,/, $bbox );
    my $bounds_count = @bounds;

    if ( $bounds_count != 4 && $bounds_count != 6 ) {
      print STDERR "\nInvalid BBOX option (requires 4 or 6 numbers).\n";
    } elsif ( ! in_range( $bounds[ 0 ], -180.0, 180.0 ) ) {
      print STDERR "\nInvalid BBOX option (1st number)\n";
    } elsif ( ! in_range( $bounds[ 1 ], -90.0, 90.0 ) ) {
      print STDERR "\nInvalid BBOX option (2nd number)\n";
    } elsif ( ! in_range( $bounds[ 2 ], $bounds[ 0 ], 180.0 ) ) {
      print STDERR "\nInvalid BBOX option (3rd number)\n";
    } elsif ( ! in_range( $bounds[ 3 ], $bounds[ 1 ], 90.0 ) ) {
      print STDERR "\nInvalid BBOX option (4th number)\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse compress option.

sub parse_compress_option {
  my $value = shift;
  my $result = 0;

  if ( $compress ne '' ) {
    print STDERR "\nRedundant COMPRESS option\n";
  } else {
    $compress = $value;
    my $is_valid = $compress == 0 || $compress == 1;

    if ( ! $is_valid ) {
      print STDERR "\nInvalid COMPRESS option (requires 0 or 1)\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse regrid option:

sub parse_regrid_option {
  my $value = shift;
  my $result = parse_option( $regrid, $value, 'REGRID',
                             'nearest mean weighted' );
  return $result;
}



# Parse regrid_aggregate option:

sub parse_regrid_aggregate_option {
  my $value = shift;
  my $result = parse_option( $regrid_aggregate, $value, 'REGRID_AGGREGATE',
                             'none all daily' );
  return $result;
}



# Parse lambert option.

sub parse_lambert_option {
  my $value = shift;
  my $result = 0;

  if ( $lambert ne '' ) {
    print STDERR "\nRedundant LAMBERT option\n";
  } else {
    $lambert = $value;
    my @values = split( /,/, $value );
    my $count = @values;

    if ( $count != 4 ) {
      print STDERR "\nInvalid LAMBERT option (requires 4 numbers)\n";
    } elsif ( ! in_range( $values[ 0 ], -89.0, 89.0 ) ) {
      print STDERR "\nInvalid LAMBERT option (1st number)\n";
    } elsif ( ! in_range( $values[ 1 ], -89.0, 89.0 ) ) {
      print STDERR "\nInvalid LAMBERT option (2nd number)\n";
    } elsif ( ! in_range( $values[ 2 ], -180.0, 180.0 ) ) {
      print STDERR "\nInvalid LAMBERT option: (3rd number)'\n";
    } elsif ( ! in_range( $values[ 3 ], -89.0, 89.0 ) ) {
      print STDERR "\nInvalid LAMBERT option:  (4th number)\n";
    } elsif ( $values[ 0 ] > $values[ 1 ] ) {
      print STDERR "\nInvalid LAMBERT option: (require 1st > 2nd number)\n";
    } elsif ( $values[ 0 ] > 0.0 && $values[ 1 ] < 0.0 ) {
      print STDERR "\nInvalid LAMBERT option: (require 1st and 2nd same sign)\n";
    } elsif ( $values[ 0 ] < 0.0 && $values[ 1 ] > 0.0 ) {
      print STDERR "\nInvalid LAMBERT option: (require 1st and 2nd same sign)\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse stereographic option.

sub parse_stereographic_option {
  my $value = shift;
  my $result = 0;

  if ( $stereographic ne '' ) {
    print STDERR "\nRedundant STEREOGRAPHIC option\n";
  } else {
    $stereographic = $value;
    my @values = split( /,/, $value );
    my $count = @values;

    if ( $count != 3 ) {
      print STDERR "\nInvalid STEREOGRAPHIC option (require 3 numbers)\n";
    } elsif ( ! in_range( $values[ 0 ], -180.0, 180.0 ) ) {
      print STDERR "\nInvalid STEREOGRAPHIC option: (require 1st in [-180, 180])\n";
    } elsif ( ! in_range( $values[ 1 ], -90.0, 90.0 ) ) {
      print STDERR "\nInvalid STEREOGRAPHIC option: (require 2nd in [-90, 90])\n";
    } elsif ( ! in_range( $values[ 2 ], -90.0, 90.0 ) ) {
      print STDERR "\nInvalid STEREOGRAPHIC option: (require 3rd in [-90, 90])\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse mercator option.

sub parse_mercator_option {
  my $value = shift;
  my $result = 0;

  if ( $mercator ne '' ) {
    print STDERR "\nRedundant MERCATOR option\n";
  } else {
    $mercator = $value;
    my @values = split( /,/, $value );
    my $count = @values;

    if ( $count != 1 ) {
      print STDERR "\nInvalid MERCATOR option (require 1 number)\n";
    } elsif ( ! in_range( $values[ 0 ], -180.0, 180.0 ) ) {
      print STDERR "\nInvalid MERCATOR option (require number in [-180, 180])\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse lonlat option.

sub parse_lonlat_option {
  my $value = shift;
  my $result = 0;

  if ( $lonlat ne '' ) {
    print STDERR "\nRedundant LONLAT option\n";
  } else {
    $lonlat = 1;
    $result = 1;
  }

  return $result;
}



# Parse ellipsoid option.

sub parse_ellipsoid_option {
  my $value = shift;
  my $result = 0;

  if ( $ellipsoid ne '' ) {
    print STDERR "\nRedundant ELLIPSOID option\n";
  } else {
    $ellipsoid = $value;
    my @values = split( /,/, $value );
    my $count = @values;

    if ( $count != 1 && $count != 2 ) {
      print STDERR "\nInvalid ELLIPSOID option (require 1 or 2 numbers)\n";
    } elsif ( ! in_range( $values[ 0 ], 1.0, 1e10 ) ) {
      print STDERR "\nInvalid ELLIPSOID option (1st number)\n";
    } elsif ( $count == 2 ) {

      if ( ! in_range( $values[ 1 ], $values[ 0 ], 1e10 ) ) {
        print STDERR "\nInvalid ELLIPSOID option: (2nd number)\n";
      } else {
        $result = 1;
      }
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse grid option.

sub parse_grid_option {
  my $value = shift;
  my $result = 0;

  if ( $grid ne '' ) {
    print STDERR "\nRedundant GRID option\n";
  } else {
    $grid = $value;
    my @values = split( /,/, $value );
    my $count = @values;

    if ( $count != 6 ) {
      print STDERR "\nInvalid GRID option (require 6 numbers)\n";
    } elsif ( $values[ 0 ] < 1 ) {
      print STDERR "\nInvalid GRID option (1st number)\n";
    } elsif ( $values[ 1 ] < 1 ) {
      print STDERR "\nInvalid GRID option (2nd number)\n";
    } elsif ( ! in_range( $values[ 2 ], -1e10, 1e10 ) ) {
      print STDERR "\nInvalid GRID option (3rd number)\n";
    } elsif ( ! in_range( $values[ 3 ], -1e10, 1e10 ) ) {
      print STDERR "\nInvalid GRID option (4th number)\n";
    } elsif ( ! in_range( $values[ 4 ], 0.01, 1e10 ) ) {
      print STDERR "\nInvalid GRID option (5th number)\n";
    } elsif ( ! in_range( $values[ 5 ], 0.01, 1e10 ) ) {
      print STDERR "\nInvalid GRID option (6th number)\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse levels option.

sub parse_levels_option {
  my $value = shift;
  my $result = 0;

  if ( $levels ne '' ) {
    print STDERR "\nRedundant LEVELS option\n";
  } else {
    $levels = $value;
    my @values = split( /,/, $value );
    my $count = @values;

    if ( $count != 3 + $values[ 0 ] + 1 + 5 ) {
      print STDERR "\nInvalid LEVELS option (count)\n";
    } elsif ( ! in_range( $values[ 0 ], 1, 100 ) ) {
      print STDERR "\nInvalid LEVELS option (1st number)\n";
    } elsif ( ! in_range( $values[ 1 ], 1, 7 ) ) {
      print STDERR "\nInvalid LEVELS option (2nd number)\n";
    } elsif ( ! in_range( $values[ 2 ], 0.0, 1e8 ) ) {
      print STDERR "\nInvalid LEVELS option (3rd number)\n";
    } else {

      # Ensure level values are ordered decreasing if sigma-p else increasing:

      my $end = $count - 5;
      my $minimum = 0.0;
      my $maximum = $lonlat ne '' ? 100000.0 : 1.0;
      my $ok = 0;

      for ( my $index = 3; $index < $end; ++$index ) {
        my $level_value = $values[ $index ];
        $ok = in_range( $level_value, $minimum, $maximum );

        if ( ! $ok ) {
          print STDERR "\nInvalid LEVELS option (number $index)\n";
          $index = $count;
        } elsif ( $lonlat ne '' ) {
          $minimum = $level_value;
        } else {
          $maximum = $level_value;
        }
      }

      # Check last parameter constants:

      if ( $ok == 1 ) {
        my $index = $count - 5;

        if ( ! in_range( $values[ $index ], 0.01, 1e2 ) ) {
          print STDERR "\nInvalid LEVELS option\n";
        } elsif ( ! in_range( $values[ $index + 1 ], 0.01, 1e4 ) ) {
          print STDERR "\nInvalid LEVELS option\n";
        } elsif ( ! in_range( $values[ $index + 2 ], 0.01, 1e4 ) ) {
          print STDERR "\nInvalid LEVELS option\n";
        } elsif ( ! in_range( $values[ $index + 3 ], 0.01, 1e4 ) ) {
          print STDERR "\nInvalid LEVELS option\n";
        } elsif ( ! in_range( $values[ $index + 4 ], 0.01, 1e6 ) ) {
          print STDERR "\nInvalid LEVELS option\n";
        } else {
          $result = 1;
        }
      }
    }
  }

  return $result;
}



# Parse instrument option:

sub parse_instrument_option {
  my $value = shift;
  my $result = 0;

  if ( $instrument ne '' ) {
    print STDERR "\nRedundant INSTRUMENT option\n";
  } else {
    $instrument = $value;
    my $is_valid = $instrument > 0;

    if ( ! $is_valid ) {
      print STDERR "\nInvalid INSTRUMENT option (require integer > 0)\n";
    } else {
      $result = 1;
    }
  }

  return $result;
}



# Parse aggregate option:

sub parse_aggregate_option {
  my $value = shift;
  my $result = parse_option( $aggregate, $value, 'AGGREGATE',
                             'none hourly daily monthly all' );
  return $result;
}



# Parse minimum_quality option:

sub parse_minimum_quality_option {
  my $value = shift;
  my $result = parse_option( $minimum_quality, $value, 'MINIMUM_QUALITY',
                             'high medium low' );
  return $result;
}




# Check that all required 'options' have been specified:

sub required_options_specified {
  my $result = 0;

  if ( $service eq '' ) {
    print STDERR "\nMissing option: 'SERVICE'\n";
  } elsif ( $version eq '' ) {
    print STDERR "\nMissing option: 'VERSION'\n";
  } elsif ( $request eq '' ) {
    print STDERR "\nMissing option: 'REQUEST'\n";
  } elsif ( $request eq 'getcoverage' || $request eq 'getmetadata' ) {

    if ( $coverage eq '' ) {
      print STDERR "\nMissing option: 'COVERAGE'\n";
    } elsif ( $format eq '' ) {
      print STDERR "\nMissing option: 'FORMAT'\n";
    } elsif ( $time eq '' ) {
      print STDERR "\nMissing option: 'TIME'\n";
    } elsif ( $bbox eq '' ) {
      print STDERR "\nMissing option: 'BBOX'\n";
    } else {
      my $regrid_count = 0;
      $regrid_count += $regrid ne '';
      $regrid_count += $ellipsoid ne '';
      $regrid_count += $grid ne '';
      my $projection_count = 0;
      $projection_count += $lambert ne '';
      $projection_count += $stereographic ne '';
      $projection_count += $mercator ne '';
      $projection_count += $lonlat ne '';

      $result =
        $regrid_count == 0 && $projection_count == 0 ||
        $regrid_count == 3 && $projection_count == 1;

      if ( ! $result ) {
        print STDERR "\nInvalid options: 'REGRID/";
        print STDERR "LAMBERT/STEREOGRAPHIC/MERCATOR/LONLAT/";
        print STDERR "GRID/ELLIPSOID'\n";
      }
    }
  } else {
    $result = 1;
  }

  return $result;
}



# Compute starting_timestamp and hours.
# inputs:  $time = '2014-07-15t00:00:00z/2014-07-15t23:59:59z'
# outputs: $starting_timestamp = 20060703000000
#          $ending_timestamp   = 20060703235959
#          $hours = 24

sub compute_time_range {
  my $yyyy = substr( $time, 0, 4 );
  my $mo   = substr( $time, 5, 2 );
  my $dd   = substr( $time, 8, 2 );
  my $hh   = substr( $time, 11, 2 );
  my $mm   = substr( $time, 14, 2 );
  my $ss   = substr( $time, 17, 2 );
  my $i    = index(  $time, '/' );
  my $t1 = integer_timestamp( $yyyy, $mo, $dd, $hh );
  my $t2 = $t1;

  $starting_timestamp = "$yyyy$mo$dd$hh$mm$ss";
  $ending_timestamp = $starting_timestamp;
  $hours = 1;

  if ( $i != -1 ) {
    ++$i;
    my $yyyy2 = substr( $time, $i + 0, 4 );
    my $mo2   = substr( $time, $i + 5, 2 );
    my $dd2   = substr( $time, $i + 8, 2 );
    my $hh2   = substr( $time, $i + 11, 2 );
    my $mm2   = substr( $time, $i + 14, 2 );
    my $ss2   = substr( $time, $i + 17, 2 );
    $t2   = integer_timestamp( $yyyy2, $mo2, $dd2, $hh2 );
    $ending_timestamp = "$yyyy2$mo2$dd2$hh2$mm2$ss2";

    while ( integer_timestamp( $yyyy, $mo, $dd, $hh ) != $t2 ) {
      increment_timestamp( $yyyy, $mo, $dd, $hh );
      ++$hours;
    }
  }
}



# Construct subsetter command.

sub construct_command {
  my $t1 = substr( $starting_timestamp, 0, 10 );
  my $file_type = $source;
  my @bounds = split( /,/, $bbox );
  my $yyyymmdd1 = substr( $starting_timestamp, 0, 8 );
  my $yyyymmdd2 = substr( $ending_timestamp, 0, 8 );

  if ( $format eq 'original' ) {
    $command = "$lister $source $yyyymmdd1 $yyyymmdd2 $bounds[ 0 ] $bounds[ 1 ] $bounds[ 2 ] $bounds[ 3 ] $instrument | /usr/bin/xargs /bin/gtar -zcO";
  } else {
    my $list_command = "$lister $source $yyyymmdd1 $yyyymmdd2 $bounds[ 0 ] $bounds[ 1 ] $bounds[ 2 ] $bounds[ 3 ] $instrument > $temp_file_name";
    my $domain = " -bounds $bounds[ 0 ] $bounds[ 1 ] $bounds[ 2 ] $bounds[ 3 ] ";
    my $bounds_count = @bounds;

    if ( $bounds_count == 6 ) {
      $domain .= " -elevation $bounds[ 4 ] $bounds[ 5 ] ";
    }

    my $subsetter_format = $format;
    my $minimum_quality_option = '';
    my $aggregate_option = '';
    my $instrument_option = '';
    my $my_xdrconvert = '';
    my $my_compressor = '';

    # Unlike other subset programs, Pandoraubset supports -format ascii.

    if ( $regrid ne '' ||
       ( $format ne 'xdr' &&
         ( $format ne 'ascii' || $variable eq 'id' ) ) ) {
      $subsetter_format = 'xdr';
      my $xdrconvert_format = $format;
      my @format_parts = split( /-/, $format );
      my $format_parts_count = @format_parts;

      if ( $format_parts_count == 2 ) {
        $xdrconvert_format = $format_parts[ 1 ];
      }

      my $regrid_args = '';

      if ( $regrid ne '' ) {
        my $projection_args =
          $lambert ne '' ? "-lambert $lambert "
          : $stereographic ne '' ? "-stereographic $stereographic "
          : $mercator ne '' ? "-mercator $mercator "
          : "-lonlat ";

        $projection_args =~ tr/,/ /;
        my @ellipsoid_args = split( /,/, $ellipsoid );
        my $ellipsoid_args_count = @ellipsoid_args;
        my $major_semiaxis = $ellipsoid_args[ 0 ];
        my $minor_semiaxis =
          $ellipsoid_args_count == 1 ? $major_semiaxis : $ellipsoid_args[ 1 ];
        my $grid_args = "-grid $grid ";
        $grid_args =~ tr/,/ /;
        my $layer_args = '';

        if ( $levels ne '' ) {
          $layer_args = "-layers $levels ";
          $layer_args =~ tr/,/ /;
        }

        my $regrid_aggregate_option = '';

        if ( $regrid_aggregate eq 'daily' ) {
          $regrid_aggregate_option = '-aggregate 24';
        } elsif ( $regrid_aggregate eq 'all' ) {
          $regrid_aggregate_option = "-aggregate $hours";
        }

        $regrid_args =
          "-regrid $regrid " .
          $projection_args .
          "-ellipsoid $major_semiaxis $minor_semiaxis " .
          $grid_args .
          $layer_args .
          $regrid_aggregate_option;
      }

      $my_xdrconvert = " | $xdrconvert $regrid_args -$xdrconvert_format";
    }

    if ( $compress ne '' && $compress == 1 ) {
      $my_compressor = " | $compressor";
    }

    if ( $instrument ne '' ) {
      $instrument_option = " -instrument $instrument ";
    }

    if ( $minimum_quality ne '' ) {
      $minimum_quality_option = " -minimum_quality $minimum_quality ";
    }

    if ( $aggregate ne '' ) {
      $aggregate_option = " -aggregate $aggregate ";
    }

    # TEMP HACK until RSIG3D is deployed with real Pandora data:

    if ( $source eq 'locations' ) {
      $command =
        "$list_command ; $locations_subsetter" .
        " -files $temp_file_name" .
        " -desc https://pandora.gsfc.nasa.gov/Data/html/products.html,PandoraSubset" .
        " -time $starting_timestamp $ending_timestamp " .
        " -variable $variable " .
        $domain .
        "$my_xdrconvert$my_compressor";
        return 1;
    }

    $command =
      "$list_command ; $subsetter" .
      " -tmpdir $temp_directory" .
      " -files $temp_file_name" .
      " -desc https://data.pandonia-global-network.org,PandoraSubset" .
      " -timerange $starting_timestamp $ending_timestamp " .
      $domain .
      " -format $subsetter_format" .
      " -variable $variable " .
      $minimum_quality_option .
      $aggregate_option .
      "$my_xdrconvert$my_compressor ; /bin/rm $temp_file_name";
  }
}



############################### HELPER ROUTINES ##############################



# debug( message );

sub debug {
  my $message = shift;

  if ( $debugging ) {
    print STDERR "\n$message\n";
  }
}



# Execute command and echo its output to STDOUT. E.g., execute_command( 'ls' );

sub execute_command {
  my $command = shift;
  my $result = 0;
  my $the_pipe = 0;

  # Untaint command (match expression is arbitrary as far as -T is concerned):

  if ( $command =~ m#^(/[\w-]+/[\w -/.;:,>'@|]+)$# ) {
    $command = $1; # Re-assign first match, which is enough to satisfy -T.
    debug( "$0 executing command = $command" );
    %ENV = (); # Unset all environment variables prior to popen.
    # Complicated, supposedly safer way to open a readable pipe to command:
    my $pid = open( the_pipe, "-|" );

    if ( ! defined( $pid ) ) {
      die "Couldn't open pipe to subprocess";
    } elsif ( $pid ) { # Parent process.

      while ( <the_pipe> ) {
        print;
      }

      close( the_pipe ) or die $!;
      $result = ! $?;
    } else { # Child process.
      exec( $command ) or die "can't exec program: $!";
    }
  } else {
    print STDERR "\n$0: command contains invalid characters.\n";
  }

  return $result;
}



# my $result = parse_option( $option, $value, $option_name, $valid_values );
# my $result = parse_option( $variable, $value, 'COVERAGE', 'ozone pm25' );

sub parse_option {
  my ( $option, $value, $option_name, $valid_values ) = @_;
  my $result = 0;

  if ( $option ne '' ) {
    print STDERR "\nRedundant $option_name option: '$value'\n";
  } else {
    $result = index( " $valid_values ", " $value " ) != -1;

    if ( $result ) {
      $_[ 0 ] = $value;
    } else {
      print STDERR "\nInvalid $option_name option: '$value'\n";
    }
  }

  return $result;
}



# my $ok = in_range( $value, $minimum, $maximum );

sub in_range {
  my ( $value, $minimum, $maximum ) = @_;
  my $result = $value >= $minimum && $value <= $maximum;
  return $result;
}



# my $is_valid = is_valid_time( '2001-08-26t20:00:00z/2001-08-27t23:59:59z' );

sub is_valid_time {
  my $time = shift;
  my $result = 0;
  my $length = length( $time );

  if ( $length == 41 ) {
    $result = is_valid_time( substr( $time, 0, 20 ) );
    $result = $result && substr( $time, 20, 1 ) eq '/';
    $result = $result && is_valid_time( substr( $time, 21, 20 ) );
    $result = $result && substr( $time, 0, 20 ) le substr( $time, 21, 20 );
  } elsif ( $length == 20 ) {
    my $year   = substr( $time, 0, 4 );
    my $month  = substr( $time, 5, 2 );
    my $day    = substr( $time, 8, 2 );
    my $hour   = substr( $time, 11, 2 );
    my $minute = substr( $time, 14, 2 );
    my $second = substr( $time, 17, 2 );
    $result = in_range( $year, 1900, 3000 );
    $result = $result && in_range( $month, 1, 12 );
    $result = $result && in_range( $day, 1, days_in_month( $year, $month ) );
    $result = $result && in_range( $hour, 0, 23 );
    $result = $result && in_range( $minute, 0, 59 );
    $result = $result && in_range( $second, 0, 59 );
    $result = $result && substr( $time, 4, 1 ) eq '-';
    $result = $result && substr( $time, 7, 1 ) eq '-';
    $result = $result && substr( $time, 10, 1 ) eq 't';
    $result = $result && substr( $time, 13, 1 ) eq ':';
    $result = $result && substr( $time, 16, 1 ) eq ':';
    $result = $result && substr( $time, 19, 1 ) eq 'z';
  }

  return $result;
}



# increment_timestamp( $yyyy, $mm, $dd, $hh );

sub increment_timestamp {
  my ( $yyyy, $mm, $dd, $hh ) = @_;
  my $hours_per_day   = 23;
  my $months_per_year = 12;
  my $days_this_month = days_in_month( $yyyy, $mm );
  ++$hh;

  if ( $hh > $hours_per_day ) {
    $hh = 0;
    ++$dd;

    if ( $dd > $days_this_month ) {
      $dd = 1;
      ++$mm;

      if ( $mm > $months_per_year ) {
        $mm = 1;
        ++$yyyy;
      }
    }
  }

  $_[ 0 ] = $yyyy;
  $_[ 1 ] = $mm;
  $_[ 2 ] = $dd;
  $_[ 3 ] = $hh;
}



# my $yyyymmddhh = integer_timestamp( $yyyy, $mm, $dd, $hh );

sub integer_timestamp {
  my ( $yyyy, $mm, $dd, $hh ) = @_;
  my $result = int( $yyyy * 1000000 + $mm * 10000 + $dd * 100 + $hh );
  return $result;
}



# my $leap = is_leap_year( $year );

sub is_leap_year {
  my $year = shift;
  my $result = $year % 4 == 0 && ( $year % 100 != 0 || $year % 400 == 0 );
  return $result;
}



# my $days = days_in_month( $year, $month );

sub days_in_month {
  my $year  = shift;
  my $month = shift;

  # 30 days hath September, April, June and November...

  my @days_per_month = ( 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 );
  my $result = $days_per_month[ $month - 1 ];

  if ( $month == 2 ) {

    if ( is_leap_year( $year ) ) {
      ++$result;
    }
  }

  return $result;
}




